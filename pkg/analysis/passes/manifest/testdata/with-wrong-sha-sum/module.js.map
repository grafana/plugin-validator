{"version":3,"file":"module.js","mappings":"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","sources":["webpack:///../node_modules/moment-timezone/index.js","webpack:///../node_modules/moment-timezone/moment-timezone.js","webpack:///./external/moment-duration-format.js","webpack:///external amd \"@emotion/css\"","webpack:///external amd \"@grafana/data\"","webpack:///external amd \"@grafana/runtime\"","webpack:///external amd \"@grafana/ui\"","webpack:///external amd \"moment\"","webpack:///external amd \"react\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./types.ts","webpack:///./ClockPanel.tsx","webpack:///./ColorEditor.tsx","webpack:///./options.ts","webpack:///./migrations.ts","webpack:///./module.ts"],"sourcesContent":["var moment = module.exports = require(\"./moment-timezone\");\nmoment.tz.load(require('./data/packed/latest.json'));\n","//! moment-timezone.js\n//! version : 0.5.34\n//! Copyright (c) JS Foundation and other contributors\n//! license : MIT\n//! github.com/moment/moment-timezone\n\n(function (root, factory) {\n\t\"use strict\";\n\n\t/*global define*/\n\tif (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = factory(require('moment')); // Node\n\t} else if (typeof define === 'function' && define.amd) {\n\t\tdefine(['moment'], factory);                 // AMD\n\t} else {\n\t\tfactory(root.moment);                        // Browser\n\t}\n}(this, function (moment) {\n\t\"use strict\";\n\n\t// Resolves es6 module loading issue\n\tif (moment.version === undefined && moment.default) {\n\t\tmoment = moment.default;\n\t}\n\n\t// Do not load moment-timezone a second time.\n\t// if (moment.tz !== undefined) {\n\t// \tlogError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);\n\t// \treturn moment;\n\t// }\n\n\tvar VERSION = \"0.5.34\",\n\t\tzones = {},\n\t\tlinks = {},\n\t\tcountries = {},\n\t\tnames = {},\n\t\tguesses = {},\n\t\tcachedGuess;\n\n\tif (!moment || typeof moment.version !== 'string') {\n\t\tlogError('Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/');\n\t}\n\n\tvar momentVersion = moment.version.split('.'),\n\t\tmajor = +momentVersion[0],\n\t\tminor = +momentVersion[1];\n\n\t// Moment.js version check\n\tif (major < 2 || (major === 2 && minor < 6)) {\n\t\tlogError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com');\n\t}\n\n\t/************************************\n\t\tUnpacking\n\t************************************/\n\n\tfunction charCodeToInt(charCode) {\n\t\tif (charCode > 96) {\n\t\t\treturn charCode - 87;\n\t\t} else if (charCode > 64) {\n\t\t\treturn charCode - 29;\n\t\t}\n\t\treturn charCode - 48;\n\t}\n\n\tfunction unpackBase60(string) {\n\t\tvar i = 0,\n\t\t\tparts = string.split('.'),\n\t\t\twhole = parts[0],\n\t\t\tfractional = parts[1] || '',\n\t\t\tmultiplier = 1,\n\t\t\tnum,\n\t\t\tout = 0,\n\t\t\tsign = 1;\n\n\t\t// handle negative numbers\n\t\tif (string.charCodeAt(0) === 45) {\n\t\t\ti = 1;\n\t\t\tsign = -1;\n\t\t}\n\n\t\t// handle digits before the decimal\n\t\tfor (i; i < whole.length; i++) {\n\t\t\tnum = charCodeToInt(whole.charCodeAt(i));\n\t\t\tout = 60 * out + num;\n\t\t}\n\n\t\t// handle digits after the decimal\n\t\tfor (i = 0; i < fractional.length; i++) {\n\t\t\tmultiplier = multiplier / 60;\n\t\t\tnum = charCodeToInt(fractional.charCodeAt(i));\n\t\t\tout += num * multiplier;\n\t\t}\n\n\t\treturn out * sign;\n\t}\n\n\tfunction arrayToInt (array) {\n\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\tarray[i] = unpackBase60(array[i]);\n\t\t}\n\t}\n\n\tfunction intToUntil (array, length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tarray[i] = Math.round((array[i - 1] || 0) + (array[i] * 60000)); // minutes to milliseconds\n\t\t}\n\n\t\tarray[length - 1] = Infinity;\n\t}\n\n\tfunction mapIndices (source, indices) {\n\t\tvar out = [], i;\n\n\t\tfor (i = 0; i < indices.length; i++) {\n\t\t\tout[i] = source[indices[i]];\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction unpack (string) {\n\t\tvar data = string.split('|'),\n\t\t\toffsets = data[2].split(' '),\n\t\t\tindices = data[3].split(''),\n\t\t\tuntils  = data[4].split(' ');\n\n\t\tarrayToInt(offsets);\n\t\tarrayToInt(indices);\n\t\tarrayToInt(untils);\n\n\t\tintToUntil(untils, indices.length);\n\n\t\treturn {\n\t\t\tname       : data[0],\n\t\t\tabbrs      : mapIndices(data[1].split(' '), indices),\n\t\t\toffsets    : mapIndices(offsets, indices),\n\t\t\tuntils     : untils,\n\t\t\tpopulation : data[5] | 0\n\t\t};\n\t}\n\n\t/************************************\n\t\tZone object\n\t************************************/\n\n\tfunction Zone (packedString) {\n\t\tif (packedString) {\n\t\t\tthis._set(unpack(packedString));\n\t\t}\n\t}\n\n\tZone.prototype = {\n\t\t_set : function (unpacked) {\n\t\t\tthis.name       = unpacked.name;\n\t\t\tthis.abbrs      = unpacked.abbrs;\n\t\t\tthis.untils     = unpacked.untils;\n\t\t\tthis.offsets    = unpacked.offsets;\n\t\t\tthis.population = unpacked.population;\n\t\t},\n\n\t\t_index : function (timestamp) {\n\t\t\tvar target = +timestamp,\n\t\t\t\tuntils = this.untils,\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < untils.length; i++) {\n\t\t\t\tif (target < untils[i]) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tcountries : function () {\n\t\t\tvar zone_name = this.name;\n\t\t\treturn Object.keys(countries).filter(function (country_code) {\n\t\t\t\treturn countries[country_code].zones.indexOf(zone_name) !== -1;\n\t\t\t});\n\t\t},\n\n\t\tparse : function (timestamp) {\n\t\t\tvar target  = +timestamp,\n\t\t\t\toffsets = this.offsets,\n\t\t\t\tuntils  = this.untils,\n\t\t\t\tmax     = untils.length - 1,\n\t\t\t\toffset, offsetNext, offsetPrev, i;\n\n\t\t\tfor (i = 0; i < max; i++) {\n\t\t\t\toffset     = offsets[i];\n\t\t\t\toffsetNext = offsets[i + 1];\n\t\t\t\toffsetPrev = offsets[i ? i - 1 : i];\n\n\t\t\t\tif (offset < offsetNext && tz.moveAmbiguousForward) {\n\t\t\t\t\toffset = offsetNext;\n\t\t\t\t} else if (offset > offsetPrev && tz.moveInvalidForward) {\n\t\t\t\t\toffset = offsetPrev;\n\t\t\t\t}\n\n\t\t\t\tif (target < untils[i] - (offset * 60000)) {\n\t\t\t\t\treturn offsets[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn offsets[max];\n\t\t},\n\n\t\tabbr : function (mom) {\n\t\t\treturn this.abbrs[this._index(mom)];\n\t\t},\n\n\t\toffset : function (mom) {\n\t\t\tlogError(\"zone.offset has been deprecated in favor of zone.utcOffset\");\n\t\t\treturn this.offsets[this._index(mom)];\n\t\t},\n\n\t\tutcOffset : function (mom) {\n\t\t\treturn this.offsets[this._index(mom)];\n\t\t}\n\t};\n\n\t/************************************\n\t\tCountry object\n\t************************************/\n\n\tfunction Country (country_name, zone_names) {\n\t\tthis.name = country_name;\n\t\tthis.zones = zone_names;\n\t}\n\n\t/************************************\n\t\tCurrent Timezone\n\t************************************/\n\n\tfunction OffsetAt(at) {\n\t\tvar timeString = at.toTimeString();\n\t\tvar abbr = timeString.match(/\\([a-z ]+\\)/i);\n\t\tif (abbr && abbr[0]) {\n\t\t\t// 17:56:31 GMT-0600 (CST)\n\t\t\t// 17:56:31 GMT-0600 (Central Standard Time)\n\t\t\tabbr = abbr[0].match(/[A-Z]/g);\n\t\t\tabbr = abbr ? abbr.join('') : undefined;\n\t\t} else {\n\t\t\t// 17:56:31 CST\n\t\t\t// 17:56:31 GMT+0800 (台北標準時間)\n\t\t\tabbr = timeString.match(/[A-Z]{3,5}/g);\n\t\t\tabbr = abbr ? abbr[0] : undefined;\n\t\t}\n\n\t\tif (abbr === 'GMT') {\n\t\t\tabbr = undefined;\n\t\t}\n\n\t\tthis.at = +at;\n\t\tthis.abbr = abbr;\n\t\tthis.offset = at.getTimezoneOffset();\n\t}\n\n\tfunction ZoneScore(zone) {\n\t\tthis.zone = zone;\n\t\tthis.offsetScore = 0;\n\t\tthis.abbrScore = 0;\n\t}\n\n\tZoneScore.prototype.scoreOffsetAt = function (offsetAt) {\n\t\tthis.offsetScore += Math.abs(this.zone.utcOffset(offsetAt.at) - offsetAt.offset);\n\t\tif (this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, '') !== offsetAt.abbr) {\n\t\t\tthis.abbrScore++;\n\t\t}\n\t};\n\n\tfunction findChange(low, high) {\n\t\tvar mid, diff;\n\n\t\twhile ((diff = ((high.at - low.at) / 12e4 | 0) * 6e4)) {\n\t\t\tmid = new OffsetAt(new Date(low.at + diff));\n\t\t\tif (mid.offset === low.offset) {\n\t\t\t\tlow = mid;\n\t\t\t} else {\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\n\t\treturn low;\n\t}\n\n\tfunction userOffsets() {\n\t\tvar startYear = new Date().getFullYear() - 2,\n\t\t\tlast = new OffsetAt(new Date(startYear, 0, 1)),\n\t\t\toffsets = [last],\n\t\t\tchange, next, i;\n\n\t\tfor (i = 1; i < 48; i++) {\n\t\t\tnext = new OffsetAt(new Date(startYear, i, 1));\n\t\t\tif (next.offset !== last.offset) {\n\t\t\t\tchange = findChange(last, next);\n\t\t\t\toffsets.push(change);\n\t\t\t\toffsets.push(new OffsetAt(new Date(change.at + 6e4)));\n\t\t\t}\n\t\t\tlast = next;\n\t\t}\n\n\t\tfor (i = 0; i < 4; i++) {\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));\n\t\t}\n\n\t\treturn offsets;\n\t}\n\n\tfunction sortZoneScores (a, b) {\n\t\tif (a.offsetScore !== b.offsetScore) {\n\t\t\treturn a.offsetScore - b.offsetScore;\n\t\t}\n\t\tif (a.abbrScore !== b.abbrScore) {\n\t\t\treturn a.abbrScore - b.abbrScore;\n\t\t}\n\t\tif (a.zone.population !== b.zone.population) {\n\t\t\treturn b.zone.population - a.zone.population;\n\t\t}\n\t\treturn b.zone.name.localeCompare(a.zone.name);\n\t}\n\n\tfunction addToGuesses (name, offsets) {\n\t\tvar i, offset;\n\t\tarrayToInt(offsets);\n\t\tfor (i = 0; i < offsets.length; i++) {\n\t\t\toffset = offsets[i];\n\t\t\tguesses[offset] = guesses[offset] || {};\n\t\t\tguesses[offset][name] = true;\n\t\t}\n\t}\n\n\tfunction guessesForUserOffsets (offsets) {\n\t\tvar offsetsLength = offsets.length,\n\t\t\tfilteredGuesses = {},\n\t\t\tout = [],\n\t\t\ti, j, guessesOffset;\n\n\t\tfor (i = 0; i < offsetsLength; i++) {\n\t\t\tguessesOffset = guesses[offsets[i].offset] || {};\n\t\t\tfor (j in guessesOffset) {\n\t\t\t\tif (guessesOffset.hasOwnProperty(j)) {\n\t\t\t\t\tfilteredGuesses[j] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i in filteredGuesses) {\n\t\t\tif (filteredGuesses.hasOwnProperty(i)) {\n\t\t\t\tout.push(names[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction rebuildGuess () {\n\n\t\t// use Intl API when available and returning valid time zone\n\t\ttry {\n\t\t\tvar intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\t\t\tif (intlName && intlName.length > 3) {\n\t\t\t\tvar name = names[normalizeName(intlName)];\n\t\t\t\tif (name) {\n\t\t\t\t\treturn name;\n\t\t\t\t}\n\t\t\t\tlogError(\"Moment Timezone found \" + intlName + \" from the Intl api, but did not have that data loaded.\");\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// Intl unavailable, fall back to manual guessing.\n\t\t}\n\n\t\tvar offsets = userOffsets(),\n\t\t\toffsetsLength = offsets.length,\n\t\t\tguesses = guessesForUserOffsets(offsets),\n\t\t\tzoneScores = [],\n\t\t\tzoneScore, i, j;\n\n\t\tfor (i = 0; i < guesses.length; i++) {\n\t\t\tzoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength);\n\t\t\tfor (j = 0; j < offsetsLength; j++) {\n\t\t\t\tzoneScore.scoreOffsetAt(offsets[j]);\n\t\t\t}\n\t\t\tzoneScores.push(zoneScore);\n\t\t}\n\n\t\tzoneScores.sort(sortZoneScores);\n\n\t\treturn zoneScores.length > 0 ? zoneScores[0].zone.name : undefined;\n\t}\n\n\tfunction guess (ignoreCache) {\n\t\tif (!cachedGuess || ignoreCache) {\n\t\t\tcachedGuess = rebuildGuess();\n\t\t}\n\t\treturn cachedGuess;\n\t}\n\n\t/************************************\n\t\tGlobal Methods\n\t************************************/\n\n\tfunction normalizeName (name) {\n\t\treturn (name || '').toLowerCase().replace(/\\//g, '_');\n\t}\n\n\tfunction addZone (packed) {\n\t\tvar i, name, split, normalized;\n\n\t\tif (typeof packed === \"string\") {\n\t\t\tpacked = [packed];\n\t\t}\n\n\t\tfor (i = 0; i < packed.length; i++) {\n\t\t\tsplit = packed[i].split('|');\n\t\t\tname = split[0];\n\t\t\tnormalized = normalizeName(name);\n\t\t\tzones[normalized] = packed[i];\n\t\t\tnames[normalized] = name;\n\t\t\taddToGuesses(normalized, split[2].split(' '));\n\t\t}\n\t}\n\n\tfunction getZone (name, caller) {\n\n\t\tname = normalizeName(name);\n\n\t\tvar zone = zones[name];\n\t\tvar link;\n\n\t\tif (zone instanceof Zone) {\n\t\t\treturn zone;\n\t\t}\n\n\t\tif (typeof zone === 'string') {\n\t\t\tzone = new Zone(zone);\n\t\t\tzones[name] = zone;\n\t\t\treturn zone;\n\t\t}\n\n\t\t// Pass getZone to prevent recursion more than 1 level deep\n\t\tif (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {\n\t\t\tzone = zones[name] = new Zone();\n\t\t\tzone._set(link);\n\t\t\tzone.name = names[name];\n\t\t\treturn zone;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction getNames () {\n\t\tvar i, out = [];\n\n\t\tfor (i in names) {\n\t\t\tif (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {\n\t\t\t\tout.push(names[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out.sort();\n\t}\n\n\tfunction getCountryNames () {\n\t\treturn Object.keys(countries);\n\t}\n\n\tfunction addLink (aliases) {\n\t\tvar i, alias, normal0, normal1;\n\n\t\tif (typeof aliases === \"string\") {\n\t\t\taliases = [aliases];\n\t\t}\n\n\t\tfor (i = 0; i < aliases.length; i++) {\n\t\t\talias = aliases[i].split('|');\n\n\t\t\tnormal0 = normalizeName(alias[0]);\n\t\t\tnormal1 = normalizeName(alias[1]);\n\n\t\t\tlinks[normal0] = normal1;\n\t\t\tnames[normal0] = alias[0];\n\n\t\t\tlinks[normal1] = normal0;\n\t\t\tnames[normal1] = alias[1];\n\t\t}\n\t}\n\n\tfunction addCountries (data) {\n\t\tvar i, country_code, country_zones, split;\n\t\tif (!data || !data.length) return;\n\t\tfor (i = 0; i < data.length; i++) {\n\t\t\tsplit = data[i].split('|');\n\t\t\tcountry_code = split[0].toUpperCase();\n\t\t\tcountry_zones = split[1].split(' ');\n\t\t\tcountries[country_code] = new Country(\n\t\t\t\tcountry_code,\n\t\t\t\tcountry_zones\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction getCountry (name) {\n\t\tname = name.toUpperCase();\n\t\treturn countries[name] || null;\n\t}\n\n\tfunction zonesForCountry(country, with_offset) {\n\t\tcountry = getCountry(country);\n\n\t\tif (!country) return null;\n\n\t\tvar zones = country.zones.sort();\n\n\t\tif (with_offset) {\n\t\t\treturn zones.map(function (zone_name) {\n\t\t\t\tvar zone = getZone(zone_name);\n\t\t\t\treturn {\n\t\t\t\t\tname: zone_name,\n\t\t\t\t\toffset: zone.utcOffset(new Date())\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\treturn zones;\n\t}\n\n\tfunction loadData (data) {\n\t\taddZone(data.zones);\n\t\taddLink(data.links);\n\t\taddCountries(data.countries);\n\t\ttz.dataVersion = data.version;\n\t}\n\n\tfunction zoneExists (name) {\n\t\tif (!zoneExists.didShowError) {\n\t\t\tzoneExists.didShowError = true;\n\t\t\t\tlogError(\"moment.tz.zoneExists('\" + name + \"') has been deprecated in favor of !moment.tz.zone('\" + name + \"')\");\n\t\t}\n\t\treturn !!getZone(name);\n\t}\n\n\tfunction needsOffset (m) {\n\t\tvar isUnixTimestamp = (m._f === 'X' || m._f === 'x');\n\t\treturn !!(m._a && (m._tzm === undefined) && !isUnixTimestamp);\n\t}\n\n\tfunction logError (message) {\n\t\tif (typeof console !== 'undefined' && typeof console.error === 'function') {\n\t\t\tconsole.error(message);\n\t\t}\n\t}\n\n\t/************************************\n\t\tmoment.tz namespace\n\t************************************/\n\n\tfunction tz (input) {\n\t\tvar args = Array.prototype.slice.call(arguments, 0, -1),\n\t\t\tname = arguments[arguments.length - 1],\n\t\t\tzone = getZone(name),\n\t\t\tout  = moment.utc.apply(null, args);\n\n\t\tif (zone && !moment.isMoment(input) && needsOffset(out)) {\n\t\t\tout.add(zone.parse(out), 'minutes');\n\t\t}\n\n\t\tout.tz(name);\n\n\t\treturn out;\n\t}\n\n\ttz.version      = VERSION;\n\ttz.dataVersion  = '';\n\ttz._zones       = zones;\n\ttz._links       = links;\n\ttz._names       = names;\n\ttz._countries\t= countries;\n\ttz.add          = addZone;\n\ttz.link         = addLink;\n\ttz.load         = loadData;\n\ttz.zone         = getZone;\n\ttz.zoneExists   = zoneExists; // deprecated in 0.1.0\n\ttz.guess        = guess;\n\ttz.names        = getNames;\n\ttz.Zone         = Zone;\n\ttz.unpack       = unpack;\n\ttz.unpackBase60 = unpackBase60;\n\ttz.needsOffset  = needsOffset;\n\ttz.moveInvalidForward   = true;\n\ttz.moveAmbiguousForward = false;\n\ttz.countries    = getCountryNames;\n\ttz.zonesForCountry = zonesForCountry;\n\n\t/************************************\n\t\tInterface with Moment.js\n\t************************************/\n\n\tvar fn = moment.fn;\n\n\tmoment.tz = tz;\n\n\tmoment.defaultZone = null;\n\n\tmoment.updateOffset = function (mom, keepTime) {\n\t\tvar zone = moment.defaultZone,\n\t\t\toffset;\n\n\t\tif (mom._z === undefined) {\n\t\t\tif (zone && needsOffset(mom) && !mom._isUTC) {\n\t\t\t\tmom._d = moment.utc(mom._a)._d;\n\t\t\t\tmom.utc().add(zone.parse(mom), 'minutes');\n\t\t\t}\n\t\t\tmom._z = zone;\n\t\t}\n\t\tif (mom._z) {\n\t\t\toffset = mom._z.utcOffset(mom);\n\t\t\tif (Math.abs(offset) < 16) {\n\t\t\t\toffset = offset / 60;\n\t\t\t}\n\t\t\tif (mom.utcOffset !== undefined) {\n\t\t\t\tvar z = mom._z;\n\t\t\t\tmom.utcOffset(-offset, keepTime);\n\t\t\t\tmom._z = z;\n\t\t\t} else {\n\t\t\t\tmom.zone(offset, keepTime);\n\t\t\t}\n\t\t}\n\t};\n\n\tfn.tz = function (name, keepTime) {\n\t\tif (name) {\n\t\t\tif (typeof name !== 'string') {\n\t\t\t\tthrow new Error('Time zone name must be a string, got ' + name + ' [' + typeof name + ']');\n\t\t\t}\n\t\t\tthis._z = getZone(name);\n\t\t\tif (this._z) {\n\t\t\t\tmoment.updateOffset(this, keepTime);\n\t\t\t} else {\n\t\t\t\tlogError(\"Moment Timezone has no data for \" + name + \". See http://momentjs.com/timezone/docs/#/data-loading/.\");\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif (this._z) { return this._z.name; }\n\t};\n\n\tfunction abbrWrap (old) {\n\t\treturn function () {\n\t\t\tif (this._z) { return this._z.abbr(this); }\n\t\t\treturn old.call(this);\n\t\t};\n\t}\n\n\tfunction resetZoneWrap (old) {\n\t\treturn function () {\n\t\t\tthis._z = null;\n\t\t\treturn old.apply(this, arguments);\n\t\t};\n\t}\n\n\tfunction resetZoneWrap2 (old) {\n\t\treturn function () {\n\t\t\tif (arguments.length > 0) this._z = null;\n\t\t\treturn old.apply(this, arguments);\n\t\t};\n\t}\n\n\tfn.zoneName  = abbrWrap(fn.zoneName);\n\tfn.zoneAbbr  = abbrWrap(fn.zoneAbbr);\n\tfn.utc       = resetZoneWrap(fn.utc);\n\tfn.local     = resetZoneWrap(fn.local);\n\tfn.utcOffset = resetZoneWrap2(fn.utcOffset);\n\n\tmoment.tz.setDefault = function(name) {\n\t\tif (major < 2 || (major === 2 && minor < 9)) {\n\t\t\tlogError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.');\n\t\t}\n\t\tmoment.defaultZone = name ? getZone(name) : null;\n\t\treturn moment;\n\t};\n\n\t// Cloning a moment should include the _z property.\n\tvar momentProperties = moment.momentProperties;\n\tif (Object.prototype.toString.call(momentProperties) === '[object Array]') {\n\t\t// moment 2.8.1+\n\t\tmomentProperties.push('_z');\n\t\tmomentProperties.push('_a');\n\t} else if (momentProperties) {\n\t\t// moment 2.7.0\n\t\tmomentProperties._z = null;\n\t}\n\n\t// INJECT DATA\n\n\treturn moment;\n}));\n","/* eslint-disable */\n/*! Moment Duration Format v2.2.1\n *  https://github.com/jsmreese/moment-duration-format\n *  Date: 2018-01-21\n *\n *  Duration format plugin function for the Moment.js library\n *  http://momentjs.com/\n *\n *  Copyright 2018 John Madhavan-Reese\n *  Released under the MIT license\n */\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['moment'], factory);\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but only CommonJS-like\n        // enviroments that support module.exports, like Node.\n        try {\n            module.exports = factory(require('moment'));\n        } catch (e) {\n            // If moment is not available, leave the setup up to the user.\n            // Like when using moment-timezone or similar moment-based package.\n            module.exports = factory;\n        }\n    }\n\n    if (root) {\n        // Globals.\n        root.momentDurationFormatSetup = root.moment ? factory(root.moment) : factory;\n    }\n})(this, function (moment) {\n    // `Number#tolocaleString` is tested on plugin initialization.\n    // If the feature test passes, `toLocaleStringWorks` will be set to `true` and the\n    // native function will be used to generate formatted output. If the feature\n    // test fails, the fallback format function internal to this plugin will be\n    // used.\n    var toLocaleStringWorks = false;\n\n    // `Number#toLocaleString` rounds incorrectly for select numbers in Microsoft\n    // environments (Edge, IE11, Windows Phone) and possibly other environments.\n    // If the rounding test fails and `toLocaleString` will be used for formatting,\n    // the plugin will \"pre-round\" number values using the fallback number format\n    // function before passing them to `toLocaleString` for final formatting.\n    var toLocaleStringRoundingWorks = false;\n\n    // Token type names in order of descending magnitude.\n    var types = \"escape years months weeks days hours minutes seconds milliseconds general\".split(\" \");\n\n    var bubbles = [\n        {\n            type: \"seconds\",\n            targets: [\n                { type: \"minutes\", value: 60 },\n                { type: \"hours\", value: 3600 },\n                { type: \"days\", value: 86400 },\n                { type: \"weeks\", value: 604800 },\n                { type: \"months\", value: 2678400 },\n                { type: \"years\", value: 31536000 }\n            ]\n        },\n        {\n            type: \"minutes\",\n            targets: [\n                { type: \"hours\", value: 60 },\n                { type: \"days\", value: 1440 },\n                { type: \"weeks\", value: 10080 },\n                { type: \"months\", value: 44640 },\n                { type: \"years\", value: 525600 }\n            ]\n        },\n        {\n            type: \"hours\",\n            targets: [\n                { type: \"days\", value: 24 },\n                { type: \"weeks\", value: 168 },\n                { type: \"months\", value: 744 },\n                { type: \"years\", value: 8760 }\n            ]\n        },\n        {\n            type: \"days\",\n            targets: [\n                { type: \"weeks\", value: 7 },\n                { type: \"months\", value: 31 },\n                { type: \"years\", value: 365 }\n            ]\n        },\n        {\n            type: \"months\",\n            targets: [\n                { type: \"years\", value: 12 }\n            ]\n        }\n    ];\n\n    // stringIncludes\n    function stringIncludes(str, search) {\n        if (search.length > str.length) {\n          return false;\n        }\n\n        return str.indexOf(search) !== -1;\n    }\n\n    // repeatZero(qty)\n    // Returns \"0\" repeated `qty` times.\n    // `qty` must be a integer >= 0.\n    function repeatZero(qty) {\n        var result = \"\";\n\n        while (qty) {\n            result += \"0\";\n            qty -= 1;\n        }\n\n        return result;\n    }\n\n    function stringRound(digits) {\n        var digitsArray = digits.split(\"\").reverse();\n        var i = 0;\n        var carry = true;\n\n        while (carry && i < digitsArray.length) {\n            if (i) {\n                if (digitsArray[i] === \"9\") {\n                    digitsArray[i] = \"0\";\n                } else {\n                    digitsArray[i] = (parseInt(digitsArray[i], 10) + 1).toString();\n                    carry = false;\n                }\n            } else {\n                if (parseInt(digitsArray[i], 10) < 5) {\n                    carry = false;\n                }\n\n                digitsArray[i] = \"0\";\n            }\n\n            i += 1;\n        }\n\n        if (carry) {\n            digitsArray.push(\"1\");\n        }\n\n        return digitsArray.reverse().join(\"\");\n    }\n\n    // formatNumber\n    // Formats any number greater than or equal to zero using these options:\n    // - userLocale\n    // - useToLocaleString\n    // - useGrouping\n    // - grouping\n    // - maximumSignificantDigits\n    // - minimumIntegerDigits\n    // - fractionDigits\n    // - groupingSeparator\n    // - decimalSeparator\n    //\n    // `useToLocaleString` will use `toLocaleString` for formatting.\n    // `userLocale` option is passed through to `toLocaleString`.\n    // `fractionDigits` is passed through to `maximumFractionDigits` and `minimumFractionDigits`\n    // Using `maximumSignificantDigits` will override `minimumIntegerDigits` and `fractionDigits`.\n    function formatNumber(number, options, userLocale) {\n        var useToLocaleString = options.useToLocaleString;\n        var useGrouping = options.useGrouping;\n        var grouping = useGrouping && options.grouping.slice();\n        var maximumSignificantDigits = options.maximumSignificantDigits;\n        var minimumIntegerDigits = options.minimumIntegerDigits || 1;\n        var fractionDigits = options.fractionDigits || 0;\n        var groupingSeparator = options.groupingSeparator;\n        var decimalSeparator = options.decimalSeparator;\n\n        if (useToLocaleString && userLocale) {\n            var localeStringOptions = {\n                minimumIntegerDigits: minimumIntegerDigits,\n                useGrouping: useGrouping\n            };\n\n            if (fractionDigits) {\n                localeStringOptions.maximumFractionDigits = fractionDigits;\n                localeStringOptions.minimumFractionDigits = fractionDigits;\n            }\n\n            // toLocaleString output is \"0.0\" instead of \"0\" for HTC browsers\n            // when maximumSignificantDigits is set. See #96.\n            if (maximumSignificantDigits && number > 0) {\n                localeStringOptions.maximumSignificantDigits = maximumSignificantDigits;\n            }\n\n            if (!toLocaleStringRoundingWorks) {\n                var roundingOptions = extend({}, options);\n                roundingOptions.useGrouping = false;\n                roundingOptions.decimalSeparator = \".\";\n                number = parseFloat(formatNumber(number, roundingOptions), 10);\n            }\n\n            return number.toLocaleString(userLocale, localeStringOptions);\n        }\n\n        var numberString;\n\n        // Add 1 to digit output length for floating point errors workaround. See below.\n        if (maximumSignificantDigits) {\n            numberString = number.toPrecision(maximumSignificantDigits + 1);\n        } else {\n            numberString = number.toFixed(fractionDigits + 1);\n        }\n\n        var integerString;\n        var fractionString;\n        var exponentString;\n\n        var temp = numberString.split(\"e\");\n\n        exponentString = temp[1] || \"\";\n\n        temp = temp[0].split(\".\");\n\n        fractionString = temp[1] || \"\";\n        integerString = temp[0] || \"\";\n\n        // Workaround for floating point errors in `toFixed` and `toPrecision`.\n        // (3.55).toFixed(1); --> \"3.5\"\n        // (123.55 - 120).toPrecision(2); --> \"3.5\"\n        // (123.55 - 120); --> 3.549999999999997\n        // (123.55 - 120).toFixed(2); --> \"3.55\"\n        // Round by examing the string output of the next digit.\n\n        // *************** Implement String Rounding here ***********************\n        // Check integerString + fractionString length of toPrecision before rounding.\n        // Check length of fractionString from toFixed output before rounding.\n        var integerLength = integerString.length;\n        var fractionLength = fractionString.length;\n        var digitCount = integerLength + fractionLength;\n        var digits = integerString + fractionString;\n\n        if (maximumSignificantDigits && digitCount === (maximumSignificantDigits + 1) || !maximumSignificantDigits && fractionLength === (fractionDigits + 1)) {\n            // Round digits.\n            digits = stringRound(digits);\n\n            if (digits.length === digitCount + 1) {\n                integerLength = integerLength + 1;\n            }\n\n            // Discard final fractionDigit.\n            if (fractionLength) {\n                digits = digits.slice(0, -1);\n            }\n\n            // Separate integer and fraction.\n            integerString = digits.slice(0, integerLength);\n            fractionString = digits.slice(integerLength);\n        }\n\n        // Trim trailing zeroes from fractionString because toPrecision outputs\n        // precision, not significant digits.\n        if (maximumSignificantDigits) {\n            fractionString = fractionString.replace(/0*$/, \"\");\n        }\n\n        // Handle exponent.\n        var exponent = parseInt(exponentString, 10);\n\n        if (exponent > 0) {\n            if (fractionString.length <= exponent) {\n                fractionString = fractionString + repeatZero(exponent - fractionString.length);\n\n                integerString = integerString + fractionString;\n                fractionString = \"\";\n            } else {\n                integerString = integerString + fractionString.slice(0, exponent);\n                fractionString = fractionString.slice(exponent);\n            }\n        } else if (exponent < 0) {\n            fractionString = (repeatZero(Math.abs(exponent) - integerString.length) + integerString + fractionString);\n\n            integerString = \"0\";\n        }\n\n        if (!maximumSignificantDigits) {\n            // Trim or pad fraction when not using maximumSignificantDigits.\n            fractionString = fractionString.slice(0, fractionDigits);\n\n            if (fractionString.length < fractionDigits) {\n                fractionString = fractionString + repeatZero(fractionDigits - fractionString.length);\n            }\n\n            // Pad integer when using minimumIntegerDigits\n            // and not using maximumSignificantDigits.\n            if (integerString.length < minimumIntegerDigits) {\n                integerString = repeatZero(minimumIntegerDigits - integerString.length) + integerString;\n            }\n        }\n\n        var formattedString = \"\";\n\n        // Handle grouping.\n        if (useGrouping) {\n            temp = integerString;\n            var group;\n\n            while (temp.length) {\n                if (grouping.length) {\n                    group = grouping.shift();\n                }\n\n                if (formattedString) {\n                    formattedString = groupingSeparator + formattedString;\n                }\n\n                formattedString = temp.slice(-group) + formattedString;\n\n                temp = temp.slice(0, -group);\n            }\n        } else {\n            formattedString = integerString;\n        }\n\n        // Add decimalSeparator and fraction.\n        if (fractionString) {\n            formattedString = formattedString + decimalSeparator + fractionString;\n        }\n\n        return formattedString;\n    }\n\n    // durationLabelCompare\n    function durationLabelCompare(a, b) {\n        if (a.label.length > b.label.length) {\n            return -1;\n        }\n\n        if (a.label.length < b.label.length) {\n            return 1;\n        }\n\n        // a must be equal to b\n        return 0;\n    }\n\n    // durationGetLabels\n    function durationGetLabels(token, localeData) {\n        var labels = [];\n\n        each(keys(localeData), function (localeDataKey) {\n            if (localeDataKey.slice(0, 15) !== \"_durationLabels\") {\n                return;\n            }\n\n            var labelType = localeDataKey.slice(15).toLowerCase();\n\n            each(keys(localeData[localeDataKey]), function (labelKey) {\n                if (labelKey.slice(0, 1) === token) {\n                    labels.push({\n                        type: labelType,\n                        key: labelKey,\n                        label: localeData[localeDataKey][labelKey]\n                    });\n                }\n            });\n        });\n\n        return labels;\n    }\n\n    // durationPluralKey\n    function durationPluralKey(token, integerValue, decimalValue) {\n        // Singular for a value of `1`, but not for `1.0`.\n        if (integerValue === 1 && decimalValue === null) {\n            return token;\n        }\n\n        return token + token;\n    }\n\n    var engLocale = {\n        durationLabelsStandard: {\n            S: 'millisecond',\n            SS: 'milliseconds',\n            s: 'second',\n            ss: 'seconds',\n            m: 'minute',\n            mm: 'minutes',\n            h: 'hour',\n            hh: 'hours',\n            d: 'day',\n            dd: 'days',\n            w: 'week',\n            ww: 'weeks',\n            M: 'month',\n            MM: 'months',\n            y: 'year',\n            yy: 'years'\n        },\n        durationLabelsShort: {\n            S: 'msec',\n            SS: 'msecs',\n            s: 'sec',\n            ss: 'secs',\n            m: 'min',\n            mm: 'mins',\n            h: 'hr',\n            hh: 'hrs',\n            d: 'dy',\n            dd: 'dys',\n            w: 'wk',\n            ww: 'wks',\n            M: 'mo',\n            MM: 'mos',\n            y: 'yr',\n            yy: 'yrs'\n        },\n        durationTimeTemplates: {\n            HMS: 'h:mm:ss',\n            HM: 'h:mm',\n            MS: 'm:ss'\n        },\n        durationLabelTypes: [\n            { type: \"standard\", string: \"__\" },\n            { type: \"short\", string: \"_\" }\n        ],\n        durationPluralKey: durationPluralKey\n    };\n\n    // isArray\n    function isArray(array) {\n        return Object.prototype.toString.call(array) === \"[object Array]\";\n    }\n\n    // isObject\n    function isObject(obj) {\n        return Object.prototype.toString.call(obj) === \"[object Object]\";\n    }\n\n    // findLast\n    function findLast(array, callback) {\n        var index = array.length;\n\n        while (index -= 1) {\n            if (callback(array[index])) { return array[index]; }\n        }\n    }\n\n    // find\n    function find(array, callback) {\n        var index = 0;\n\n        var max = array && array.length || 0;\n\n        var match;\n\n        if (typeof callback !== \"function\") {\n            match = callback;\n            callback = function (item) {\n                return item === match;\n            };\n        }\n\n        while (index < max) {\n            if (callback(array[index])) { return array[index]; }\n            index += 1;\n        }\n    }\n\n    // each\n    function each(array, callback) {\n        var index = 0,\n            max = array.length;\n\n        if (!array || !max) { return; }\n\n        while (index < max) {\n            if (callback(array[index], index) === false) { return; }\n            index += 1;\n        }\n    }\n\n    // map\n    function map(array, callback) {\n        var index = 0,\n            max = array.length,\n            ret = [];\n\n        if (!array || !max) { return ret; }\n\n        while (index < max) {\n            ret[index] = callback(array[index], index);\n            index += 1;\n        }\n\n        return ret;\n    }\n\n    // pluck\n    function pluck(array, prop) {\n        return map(array, function (item) {\n            return item[prop];\n        });\n    }\n\n    // compact\n    function compact(array) {\n        var ret = [];\n\n        each(array, function (item) {\n            if (item) { ret.push(item); }\n        });\n\n        return ret;\n    }\n\n    // unique\n    function unique(array) {\n        var ret = [];\n\n        each(array, function (_a) {\n            if (!find(ret, _a)) { ret.push(_a); }\n        });\n\n        return ret;\n    }\n\n    // intersection\n    function intersection(a, b) {\n        var ret = [];\n\n        each(a, function (_a) {\n            each(b, function (_b) {\n                if (_a === _b) { ret.push(_a); }\n            });\n        });\n\n        return unique(ret);\n    }\n\n    // rest\n    function rest(array, callback) {\n        var ret = [];\n\n        each(array, function (item, index) {\n            if (!callback(item)) {\n                ret = array.slice(index);\n                return false;\n            }\n        });\n\n        return ret;\n    }\n\n    // initial\n    function initial(array, callback) {\n        var reversed = array.slice().reverse();\n\n        return rest(reversed, callback).reverse();\n    }\n\n    // extend\n    function extend(a, b) {\n        for (var key in b) {\n            if (b.hasOwnProperty(key)) { a[key] = b[key]; }\n        }\n\n        return a;\n    }\n\n    // keys\n    function keys(a) {\n        var ret = [];\n\n        for (var key in a) {\n            if (a.hasOwnProperty(key)) { ret.push(key); }\n        }\n\n        return ret;\n    }\n\n    // any\n    function any(array, callback) {\n        var index = 0,\n            max = array.length;\n\n        if (!array || !max) { return false; }\n\n        while (index < max) {\n            if (callback(array[index], index) === true) { return true; }\n            index += 1;\n        }\n\n        return false;\n    }\n\n    // flatten\n    function flatten(array) {\n        var ret = [];\n\n        each(array, function(child) {\n            ret = ret.concat(child);\n        });\n\n        return ret;\n    }\n\n    function toLocaleStringSupportsLocales() {\n        var number = 0;\n        try {\n            number.toLocaleString('i');\n        } catch (e) {\n            return e.name === 'RangeError';\n        }\n        return false;\n    }\n\n    function featureTestToLocaleStringRounding() {\n        return (3.55).toLocaleString(\"en\", {\n            useGrouping: false,\n            minimumIntegerDigits: 1,\n            minimumFractionDigits: 1,\n            maximumFractionDigits: 1\n        }) === \"3.6\";\n    }\n\n    function featureTestToLocaleString() {\n        var passed = true;\n\n        // Test locale.\n        passed = passed && toLocaleStringSupportsLocales();\n        if (!passed) { return false; }\n\n        // Test minimumIntegerDigits.\n        passed = passed && (1).toLocaleString(\"en\", { minimumIntegerDigits: 1 }) === \"1\";\n        passed = passed && (1).toLocaleString(\"en\", { minimumIntegerDigits: 2 }) === \"01\";\n        passed = passed && (1).toLocaleString(\"en\", { minimumIntegerDigits: 3 }) === \"001\";\n        if (!passed) { return false; }\n\n        // Test maximumFractionDigits and minimumFractionDigits.\n        passed = passed && (99.99).toLocaleString(\"en\", { maximumFractionDigits: 0, minimumFractionDigits: 0 }) === \"100\";\n        passed = passed && (99.99).toLocaleString(\"en\", { maximumFractionDigits: 1, minimumFractionDigits: 1 }) === \"100.0\";\n        passed = passed && (99.99).toLocaleString(\"en\", { maximumFractionDigits: 2, minimumFractionDigits: 2 }) === \"99.99\";\n        passed = passed && (99.99).toLocaleString(\"en\", { maximumFractionDigits: 3, minimumFractionDigits: 3 }) === \"99.990\";\n        if (!passed) { return false; }\n\n        // Test maximumSignificantDigits.\n        passed = passed && (99.99).toLocaleString(\"en\", { maximumSignificantDigits: 1 }) === \"100\";\n        passed = passed && (99.99).toLocaleString(\"en\", { maximumSignificantDigits: 2 }) === \"100\";\n        passed = passed && (99.99).toLocaleString(\"en\", { maximumSignificantDigits: 3 }) === \"100\";\n        passed = passed && (99.99).toLocaleString(\"en\", { maximumSignificantDigits: 4 }) === \"99.99\";\n        passed = passed && (99.99).toLocaleString(\"en\", { maximumSignificantDigits: 5 }) === \"99.99\";\n        if (!passed) { return false; }\n\n        // Test grouping.\n        passed = passed && (1000).toLocaleString(\"en\", { useGrouping: true }) === \"1,000\";\n        passed = passed && (1000).toLocaleString(\"en\", { useGrouping: false }) === \"1000\";\n        if (!passed) { return false; }\n\n        return true;\n    }\n\n    // durationsFormat(durations [, template] [, precision] [, settings])\n    function durationsFormat() {\n        var args = [].slice.call(arguments);\n        var settings = {};\n        var durations;\n\n        // Parse arguments.\n        each(args, function (arg, index) {\n            if (!index) {\n                if (!isArray(arg)) {\n                    throw \"Expected array as the first argument to durationsFormat.\";\n                }\n\n                durations = arg;\n            }\n\n            if (typeof arg === \"string\" || typeof arg === \"function\") {\n                settings.template = arg;\n                return;\n            }\n\n            if (typeof arg === \"number\") {\n                settings.precision = arg;\n                return;\n            }\n\n            if (isObject(arg)) {\n                extend(settings, arg);\n            }\n        });\n\n        if (!durations || !durations.length) {\n            return [];\n        }\n\n        settings.returnMomentTypes = true;\n\n        var formattedDurations = map(durations, function (dur) {\n            return dur.format(settings);\n        });\n\n        // Merge token types from all durations.\n        var outputTypes = intersection(types, unique(pluck(flatten(formattedDurations), \"type\")));\n\n        var largest = settings.largest;\n\n        if (largest) {\n            outputTypes = outputTypes.slice(0, largest);\n        }\n\n        settings.returnMomentTypes = false;\n        settings.outputTypes = outputTypes;\n\n        return map(durations, function (dur) {\n            return dur.format(settings);\n        });\n    }\n\n    // durationFormat([template] [, precision] [, settings])\n    function durationFormat() {\n\n        var args = [].slice.call(arguments);\n        var settings = extend({}, this.format.defaults);\n\n        // Keep a shadow copy of this moment for calculating remainders.\n        // Perform all calculations on positive duration value, handle negative\n        // sign at the very end.\n        var asMilliseconds = this.asMilliseconds();\n        var asMonths = this.asMonths();\n\n        // Treat invalid durations as having a value of 0 milliseconds.\n        if (this.isValid() === false) {\n            asMilliseconds = 0;\n            asMonths = 0;\n        }\n\n        var isNegative = asMilliseconds < 0;\n\n        // Two shadow copies are needed because of the way moment.js handles\n        // duration arithmetic for years/months and for weeks/days/hours/minutes/seconds.\n        var remainder = moment.duration(Math.abs(asMilliseconds), \"milliseconds\");\n        var remainderMonths = moment.duration(Math.abs(asMonths), \"months\");\n\n        // Parse arguments.\n        each(args, function (arg) {\n            if (typeof arg === \"string\" || typeof arg === \"function\") {\n                settings.template = arg;\n                return;\n            }\n\n            if (typeof arg === \"number\") {\n                settings.precision = arg;\n                return;\n            }\n\n            if (isObject(arg)) {\n                extend(settings, arg);\n            }\n        });\n\n        var momentTokens = {\n            years: \"y\",\n            months: \"M\",\n            weeks: \"w\",\n            days: \"d\",\n            hours: \"h\",\n            minutes: \"m\",\n            seconds: \"s\",\n            milliseconds: \"S\"\n        };\n\n        var tokenDefs = {\n            escape: /\\[(.+?)\\]/,\n            years: /\\*?[Yy]+/,\n            months: /\\*?M+/,\n            weeks: /\\*?[Ww]+/,\n            days: /\\*?[Dd]+/,\n            hours: /\\*?[Hh]+/,\n            minutes: /\\*?m+/,\n            seconds: /\\*?s+/,\n            milliseconds: /\\*?S+/,\n            general: /.+?/\n        };\n\n        // Types array is available in the template function.\n        settings.types = types;\n\n        var typeMap = function (token) {\n            return find(types, function (type) {\n                return tokenDefs[type].test(token);\n            });\n        };\n\n        var tokenizer = new RegExp(map(types, function (type) {\n            return tokenDefs[type].source;\n        }).join(\"|\"), \"g\");\n\n        // Current duration object is available in the template function.\n        settings.duration = this;\n\n        // Eval template function and cache template string.\n        var template = typeof settings.template === \"function\" ? settings.template.apply(settings) : settings.template;\n\n        // outputTypes and returnMomentTypes are settings to support durationsFormat().\n\n        // outputTypes is an array of moment token types that determines\n        // the tokens returned in formatted output. This option overrides\n        // trim, largest, stopTrim, etc.\n        var outputTypes = settings.outputTypes;\n\n        // returnMomentTypes is a boolean that sets durationFormat to return\n        // the processed momentTypes instead of formatted output.\n        var returnMomentTypes = settings.returnMomentTypes;\n\n        var largest = settings.largest;\n\n        // Setup stopTrim array of token types.\n        var stopTrim = [];\n\n        if (!outputTypes) {\n            if (isArray(settings.stopTrim)) {\n                settings.stopTrim = settings.stopTrim.join(\"\");\n            }\n\n            // Parse stopTrim string to create token types array.\n            if (settings.stopTrim) {\n                each(settings.stopTrim.match(tokenizer), function (token) {\n                    var type = typeMap(token);\n\n                    if (type === \"escape\" || type === \"general\") {\n                        return;\n                    }\n\n                    stopTrim.push(type);\n                });\n            }\n        }\n\n        // Cache moment's locale data.\n        var localeData = moment.localeData();\n\n        if (!localeData) {\n            localeData = {};\n        }\n\n        // Fall back to this plugin's `eng` extension.\n        each(keys(engLocale), function (key) {\n            if (typeof engLocale[key] === \"function\") {\n                if (!localeData[key]) {\n                    localeData[key] = engLocale[key];\n                }\n\n                return;\n            }\n\n            if (!localeData[\"_\" + key]) {\n                localeData[\"_\" + key] = engLocale[key];\n            }\n        });\n\n        // Replace Duration Time Template strings.\n        // For locale `eng`: `_HMS_`, `_HM_`, and `_MS_`.\n        each(keys(localeData._durationTimeTemplates), function (item) {\n            template = template.replace(\"_\" + item + \"_\", localeData._durationTimeTemplates[item]);\n        });\n\n        // Determine user's locale.\n        var userLocale = settings.userLocale || moment.locale();\n\n        var useLeftUnits = settings.useLeftUnits;\n        var usePlural = settings.usePlural;\n        var precision = settings.precision;\n        var forceLength = settings.forceLength;\n        var useGrouping = settings.useGrouping;\n        var trunc = settings.trunc;\n\n        // Use significant digits only when precision is greater than 0.\n        var useSignificantDigits = settings.useSignificantDigits && precision > 0;\n        var significantDigits = useSignificantDigits ? settings.precision : 0;\n        var significantDigitsCache = significantDigits;\n\n        var minValue = settings.minValue;\n        var isMinValue = false;\n\n        var maxValue = settings.maxValue;\n        var isMaxValue = false;\n\n        // formatNumber fallback options.\n        var useToLocaleString = settings.useToLocaleString;\n        var groupingSeparator = settings.groupingSeparator;\n        var decimalSeparator = settings.decimalSeparator;\n        var grouping = settings.grouping;\n\n        useToLocaleString = useToLocaleString && toLocaleStringWorks;\n\n        // Trim options.\n        var trim = settings.trim;\n\n        if (isArray(trim)) {\n            trim = trim.join(\" \");\n        }\n\n        if (trim === null && (largest || maxValue || useSignificantDigits)) {\n            trim = \"all\";\n        }\n\n        if (trim === null || trim === true || trim === \"left\" || trim === \"right\") {\n            trim = \"large\";\n        }\n\n        if (trim === false) {\n            trim = \"\";\n        }\n\n        var trimIncludes = function (item) {\n            return item.test(trim);\n        };\n\n        var rLarge = /large/;\n        var rSmall = /small/;\n        var rBoth = /both/;\n        var rMid = /mid/;\n        var rAll = /^all|[^sm]all/;\n        var rFinal = /final/;\n\n        var trimLarge = largest > 0 || any([rLarge, rBoth, rAll], trimIncludes);\n        var trimSmall = any([rSmall, rBoth, rAll], trimIncludes);\n        var trimMid = any([rMid, rAll], trimIncludes);\n        var trimFinal = any([rFinal, rAll], trimIncludes);\n\n        // Parse format string to create raw tokens array.\n        var rawTokens = map(template.match(tokenizer), function (token, index) {\n            var type = typeMap(token);\n\n            if (token.slice(0, 1) === \"*\") {\n                token = token.slice(1);\n\n                if (type !== \"escape\" && type !== \"general\") {\n                    stopTrim.push(type);\n                }\n            }\n\n            return {\n                index: index,\n                length: token.length,\n                text: \"\",\n\n                // Replace escaped tokens with the non-escaped token text.\n                token: (type === \"escape\" ? token.replace(tokenDefs.escape, \"$1\") : token),\n\n                // Ignore type on non-moment tokens.\n                type: ((type === \"escape\" || type === \"general\") ? null : type)\n            };\n        });\n\n        // Associate text tokens with moment tokens.\n        var currentToken = {\n            index: 0,\n            length: 0,\n            token: \"\",\n            text: \"\",\n            type: null\n        };\n\n        var tokens = [];\n\n        if (useLeftUnits) {\n            rawTokens.reverse();\n        }\n\n        each(rawTokens, function (token) {\n            if (token.type) {\n                if (currentToken.type || currentToken.text) {\n                    tokens.push(currentToken);\n                }\n\n                currentToken = token;\n\n                return;\n            }\n\n            if (useLeftUnits) {\n                currentToken.text = token.token + currentToken.text;\n            } else {\n                currentToken.text += token.token;\n            }\n        });\n\n        if (currentToken.type || currentToken.text) {\n            tokens.push(currentToken);\n        }\n\n        if (useLeftUnits) {\n            tokens.reverse();\n        }\n\n        // Find unique moment token types in the template in order of\n        // descending magnitude.\n        var momentTypes = intersection(types, unique(compact(pluck(tokens, \"type\"))));\n\n        // Exit early if there are no moment token types.\n        if (!momentTypes.length) {\n            return pluck(tokens, \"text\").join(\"\");\n        }\n\n        // Calculate values for each moment type in the template.\n        // For processing the settings, values are associated with moment types.\n        // Values will be assigned to tokens at the last step in order to\n        // assume nothing about frequency or order of tokens in the template.\n        momentTypes = map(momentTypes, function (momentType, index) {\n            // Is this the least-magnitude moment token found?\n            var isSmallest = ((index + 1) === momentTypes.length);\n\n            // Is this the greatest-magnitude moment token found?\n            var isLargest = (!index);\n\n            // Get the raw value in the current units.\n            var rawValue;\n\n            if (momentType === \"years\" || momentType === \"months\") {\n                rawValue = remainderMonths.as(momentType);\n            } else {\n                rawValue = remainder.as(momentType);\n            }\n\n            var wholeValue = Math.floor(rawValue);\n            var decimalValue = rawValue - wholeValue;\n\n            var token = find(tokens, function (token) {\n                return momentType === token.type;\n            });\n\n            if (isLargest && maxValue && rawValue > maxValue) {\n                isMaxValue = true;\n            }\n\n            if (isSmallest && minValue && Math.abs(settings.duration.as(momentType)) < minValue) {\n                isMinValue = true;\n            }\n\n            // Note the length of the largest-magnitude moment token:\n            // if it is greater than one and forceLength is not set,\n            // then default forceLength to `true`.\n            //\n            // Rationale is this: If the template is \"h:mm:ss\" and the\n            // moment value is 5 minutes, the user-friendly output is\n            // \"5:00\", not \"05:00\". We shouldn't pad the `minutes` token\n            // even though it has length of two if the template is \"h:mm:ss\";\n            //\n            // If the minutes output should always include the leading zero\n            // even when the hour is trimmed then set `{ forceLength: true }`\n            // to output \"05:00\". If the template is \"hh:mm:ss\", the user\n            // clearly wanted everything padded so we should output \"05:00\";\n            //\n            // If the user wants the full padded output, they can use\n            // template \"hh:mm:ss\" and set `{ trim: false }` to output\n            // \"00:05:00\".\n            if (isLargest && forceLength === null && token.length > 1) {\n                forceLength = true;\n            }\n\n            // Update remainder.\n            remainder.subtract(wholeValue, momentType);\n            remainderMonths.subtract(wholeValue, momentType);\n\n            return {\n                rawValue: rawValue,\n                wholeValue: wholeValue,\n                // Decimal value is only retained for the least-magnitude\n                // moment type in the format template.\n                decimalValue: isSmallest ? decimalValue : 0,\n                isSmallest: isSmallest,\n                isLargest: isLargest,\n                type: momentType,\n                // Tokens can appear multiple times in a template string,\n                // but all instances must share the same length.\n                tokenLength: token.length\n            };\n        });\n\n        var truncMethod = trunc ? Math.floor : Math.round;\n        var truncate = function (value, places) {\n            var factor = Math.pow(10, places);\n            return truncMethod(value * factor) / factor;\n        };\n\n        var foundFirst = false;\n        var bubbled = false;\n\n        var formatValue = function (momentType, index) {\n            var formatOptions = {\n                useGrouping: useGrouping,\n                groupingSeparator: groupingSeparator,\n                decimalSeparator: decimalSeparator,\n                grouping: grouping,\n                useToLocaleString: useToLocaleString\n            };\n\n            if (useSignificantDigits) {\n                if (significantDigits <= 0) {\n                    momentType.rawValue = 0;\n                    momentType.wholeValue = 0;\n                    momentType.decimalValue = 0;\n                } else {\n                    formatOptions.maximumSignificantDigits = significantDigits;\n                    momentType.significantDigits = significantDigits;\n                }\n            }\n\n            if (isMaxValue && !bubbled) {\n                if (momentType.isLargest) {\n                    momentType.wholeValue = maxValue;\n                    momentType.decimalValue = 0;\n                } else {\n                    momentType.wholeValue = 0;\n                    momentType.decimalValue = 0;\n                }\n            }\n\n            if (isMinValue && !bubbled) {\n                if (momentType.isSmallest) {\n                    momentType.wholeValue = minValue;\n                    momentType.decimalValue = 0;\n                } else {\n                    momentType.wholeValue = 0;\n                    momentType.decimalValue = 0;\n                }\n            }\n\n            if (momentType.isSmallest || momentType.significantDigits && momentType.significantDigits - momentType.wholeValue.toString().length <= 0) {\n                // Apply precision to least significant token value.\n                if (precision < 0) {\n                    momentType.value = truncate(momentType.wholeValue, precision);\n                } else if (precision === 0) {\n                    momentType.value = truncMethod(momentType.wholeValue + momentType.decimalValue);\n                } else { // precision > 0\n                    if (useSignificantDigits) {\n                        if (trunc) {\n                            momentType.value = truncate(momentType.rawValue, significantDigits - momentType.wholeValue.toString().length);\n                        } else {\n                            momentType.value = momentType.rawValue;\n                        }\n\n                        if (momentType.wholeValue) {\n                            significantDigits -= momentType.wholeValue.toString().length;\n                        }\n                    } else {\n                        formatOptions.fractionDigits = precision;\n\n                        if (trunc) {\n                            momentType.value = momentType.wholeValue + truncate(momentType.decimalValue, precision);\n                        } else {\n                            momentType.value = momentType.wholeValue + momentType.decimalValue;\n                        }\n                    }\n                }\n            } else {\n                if (useSignificantDigits && momentType.wholeValue) {\n                    // Outer Math.round required here to handle floating point errors.\n                    momentType.value = Math.round(truncate(momentType.wholeValue, momentType.significantDigits - momentType.wholeValue.toString().length));\n\n                    significantDigits -= momentType.wholeValue.toString().length;\n                } else {\n                    momentType.value = momentType.wholeValue;\n                }\n            }\n\n            if (momentType.tokenLength > 1 && (forceLength || foundFirst)) {\n                formatOptions.minimumIntegerDigits = momentType.tokenLength;\n\n                if (bubbled && formatOptions.maximumSignificantDigits < momentType.tokenLength) {\n                    delete formatOptions.maximumSignificantDigits;\n                }\n            }\n\n            if (!foundFirst && (momentType.value > 0 || trim === \"\" /* trim: false */ || find(stopTrim, momentType.type) || find(outputTypes, momentType.type))) {\n                foundFirst = true;\n            }\n\n            momentType.formattedValue = formatNumber(momentType.value, formatOptions, userLocale);\n\n            formatOptions.useGrouping = false;\n            formatOptions.decimalSeparator = \".\";\n            momentType.formattedValueEn = formatNumber(momentType.value, formatOptions, \"en\");\n\n            if (momentType.tokenLength === 2 && momentType.type === \"milliseconds\") {\n                momentType.formattedValueMS = formatNumber(momentType.value, {\n                    minimumIntegerDigits: 3,\n                    useGrouping: false\n                }, \"en\").slice(0, 2);\n            }\n\n            return momentType;\n        };\n\n        // Calculate formatted values.\n        momentTypes = map(momentTypes, formatValue);\n        momentTypes = compact(momentTypes);\n\n        // Bubble rounded values.\n        if (momentTypes.length > 1) {\n            var findType = function (type) {\n                return find(momentTypes, function (momentType) {\n                    return momentType.type === type;\n                });\n            };\n\n            var bubbleTypes = function (bubble) {\n                var bubbleMomentType = findType(bubble.type);\n\n                if (!bubbleMomentType) {\n                    return;\n                }\n\n                each(bubble.targets, function (target) {\n                    var targetMomentType = findType(target.type);\n\n                    if (!targetMomentType) {\n                        return;\n                    }\n\n                    if (parseInt(bubbleMomentType.formattedValueEn, 10) === target.value) {\n                        bubbleMomentType.rawValue = 0;\n                        bubbleMomentType.wholeValue = 0;\n                        bubbleMomentType.decimalValue = 0;\n                        targetMomentType.rawValue += 1;\n                        targetMomentType.wholeValue += 1;\n                        targetMomentType.decimalValue = 0;\n                        targetMomentType.formattedValueEn = targetMomentType.wholeValue.toString();\n                        bubbled = true;\n                    }\n                });\n            };\n\n            each(bubbles, bubbleTypes);\n        }\n\n        // Recalculate formatted values.\n        if (bubbled) {\n            foundFirst = false;\n            significantDigits = significantDigitsCache;\n            momentTypes = map(momentTypes, formatValue);\n            momentTypes = compact(momentTypes);\n        }\n\n        if (outputTypes && !(isMaxValue && !settings.trim)) {\n            momentTypes = map(momentTypes, function (momentType) {\n                if (find(outputTypes, function (outputType) {\n                    return momentType.type === outputType;\n                })) {\n                    return momentType;\n                }\n\n                return null;\n            });\n\n            momentTypes = compact(momentTypes);\n        } else {\n            // Trim Large.\n            if (trimLarge) {\n                momentTypes = rest(momentTypes, function (momentType) {\n                    // Stop trimming on:\n                    // - the smallest moment type\n                    // - a type marked for stopTrim\n                    // - a type that has a whole value\n                    return !momentType.isSmallest && !momentType.wholeValue && !find(stopTrim, momentType.type);\n                });\n            }\n\n            // Largest.\n            if (largest && momentTypes.length) {\n                momentTypes = momentTypes.slice(0, largest);\n            }\n\n            // Trim Small.\n            if (trimSmall && momentTypes.length > 1) {\n                momentTypes = initial(momentTypes, function (momentType) {\n                    // Stop trimming on:\n                    // - a type marked for stopTrim\n                    // - a type that has a whole value\n                    // - the largest momentType\n                    return !momentType.wholeValue && !find(stopTrim, momentType.type) && !momentType.isLargest;\n                });\n            }\n\n            // Trim Mid.\n            if (trimMid) {\n                momentTypes = map(momentTypes, function (momentType, index) {\n                    if (index > 0 && index < momentTypes.length - 1 && !momentType.wholeValue) {\n                        return null;\n                    }\n\n                    return momentType;\n                });\n\n                momentTypes = compact(momentTypes);\n            }\n\n            // Trim Final.\n            if (trimFinal && momentTypes.length === 1 && !momentTypes[0].wholeValue && !(!trunc && momentTypes[0].isSmallest && momentTypes[0].rawValue < minValue)) {\n                momentTypes = [];\n            }\n        }\n\n        if (returnMomentTypes) {\n            return momentTypes;\n        }\n\n        // Localize and pluralize unit labels.\n        each(tokens, function (token) {\n            var key = momentTokens[token.type];\n\n            var momentType = find(momentTypes, function (momentType) {\n                return momentType.type === token.type;\n            });\n\n            if (!key || !momentType) {\n                return;\n            }\n\n            var values = momentType.formattedValueEn.split(\".\");\n\n            values[0] = parseInt(values[0], 10);\n\n            if (values[1]) {\n                values[1] = parseFloat(\"0.\" + values[1], 10);\n            } else {\n                values[1] = null;\n            }\n\n            var pluralKey = localeData.durationPluralKey(key, values[0], values[1]);\n\n            var labels = durationGetLabels(key, localeData);\n\n            var autoLocalized = false;\n\n            var pluralizedLabels = {};\n\n            // Auto-Localized unit labels.\n            each(localeData._durationLabelTypes, function (labelType) {\n                var label = find(labels, function (label) {\n                    return label.type === labelType.type && label.key === pluralKey;\n                });\n\n                if (label) {\n                    pluralizedLabels[label.type] = label.label;\n\n                    if (stringIncludes(token.text, labelType.string)) {\n                        token.text = token.text.replace(labelType.string, label.label);\n                        autoLocalized = true;\n                    }\n                }\n            });\n\n            // Auto-pluralized unit labels.\n            if (usePlural && !autoLocalized) {\n                labels.sort(durationLabelCompare);\n\n                each(labels, function (label) {\n                    if (pluralizedLabels[label.type] === label.label) {\n                        if (stringIncludes(token.text, label.label)) {\n                            // Stop checking this token if its label is already\n                            // correctly pluralized.\n                            return false;\n                        }\n\n                        // Skip this label if it is correct, but not present in\n                        // the token's text.\n                        return;\n                    }\n\n                    if (stringIncludes(token.text, label.label)) {\n                        // Replece this token's label and stop checking.\n                        token.text = token.text.replace(label.label, pluralizedLabels[label.type]);\n                        return false;\n                    }\n                });\n            }\n        });\n\n        // Build ouptut.\n        tokens = map(tokens, function (token) {\n            if (!token.type) {\n                return token.text;\n            }\n\n            var momentType = find(momentTypes, function (momentType) {\n                return momentType.type === token.type;\n            });\n\n            if (!momentType) {\n                return \"\";\n            }\n\n            var out = \"\";\n\n            if (useLeftUnits) {\n                out += token.text;\n            }\n\n            if (isNegative && isMaxValue || !isNegative && isMinValue) {\n                out += \"< \";\n                isMaxValue = false;\n                isMinValue = false;\n            }\n\n            if (isNegative && isMinValue || !isNegative && isMaxValue) {\n                out += \"> \";\n                isMaxValue = false;\n                isMinValue = false;\n            }\n\n            if (isNegative && (momentType.value > 0 || find(stopTrim, momentType.type) || find(outputTypes, momentType.type))) {\n                out += \"-\";\n                isNegative = false;\n            }\n\n            if (token.type === \"milliseconds\" && momentType.formattedValueMS) {\n                out += momentType.formattedValueMS;\n            } else {\n                out += momentType.formattedValue;\n            }\n\n            if (!useLeftUnits) {\n                out += token.text;\n            }\n\n            return out;\n        });\n\n        // Trim leading and trailing comma, space, colon, and dot.\n        return tokens.join(\"\").replace(/(,| |:|\\.)*$/, \"\").replace(/^(,| |:|\\.)*/, \"\");\n    }\n\n    // defaultFormatTemplate\n    function defaultFormatTemplate() {\n        var dur = this.duration;\n\n        var findType = function findType(type) {\n            return dur._data[type];\n        };\n\n        var firstType = find(this.types, findType);\n\n        var lastType = findLast(this.types, findType);\n\n        // Default template strings for each duration dimension type.\n        switch (firstType) {\n            case \"milliseconds\":\n                return \"S __\";\n            case \"seconds\": // Fallthrough.\n            case \"minutes\":\n                return \"*_MS_\";\n            case \"hours\":\n                return \"_HMS_\";\n            case \"days\": // Possible Fallthrough.\n                if (firstType === lastType) {\n                    return \"d __\";\n                }\n            case \"weeks\":\n                if (firstType === lastType) {\n                    return \"w __\";\n                }\n\n                if (this.trim === null) {\n                    this.trim = \"both\";\n                }\n\n                return \"w __, d __, h __\";\n            case \"months\": // Possible Fallthrough.\n                if (firstType === lastType) {\n                    return \"M __\";\n                }\n            case \"years\":\n                if (firstType === lastType) {\n                    return \"y __\";\n                }\n\n                if (this.trim === null) {\n                    this.trim = \"both\";\n                }\n\n                return \"y __, M __, d __\";\n            default:\n                if (this.trim === null) {\n                    this.trim = \"both\";\n                }\n\n                return \"y __, d __, h __, m __, s __\";\n        }\n    }\n\n    // init\n    function init(context) {\n        if (!context) {\n            throw \"Moment Duration Format init cannot find moment instance.\";\n        }\n\n        context.duration.format = durationsFormat;\n        context.duration.fn.format = durationFormat;\n\n        context.duration.fn.format.defaults = {\n            // Many options are defaulted to `null` to distinguish between\n            // 'not set' and 'set to `false`'\n\n            // trim\n            // Can be a string, a delimited list of strings, an array of strings,\n            // or a boolean.\n            // \"large\" - will trim largest-magnitude zero-value tokens until\n            // finding a token with a value, a token identified as 'stopTrim', or\n            // the final token of the format string.\n            // \"small\" - will trim smallest-magnitude zero-value tokens until\n            // finding a token with a value, a token identified as 'stopTrim', or\n            // the final token of the format string.\n            // \"both\" - will execute \"large\" trim then \"small\" trim.\n            // \"mid\" - will trim any zero-value tokens that are not the first or\n            // last tokens. Usually used in conjunction with \"large\" or \"both\".\n            // e.g. \"large mid\" or \"both mid\".\n            // \"final\" - will trim the final token if it is zero-value. Use this\n            // option with \"large\" or \"both\" to output an empty string when\n            // formatting a zero-value duration. e.g. \"large final\" or \"both final\".\n            // \"all\" - Will trim all zero-value tokens. Shorthand for \"both mid final\".\n            // \"left\" - maps to \"large\" to support plugin's version 1 API.\n            // \"right\" - maps to \"large\" to support plugin's version 1 API.\n            // `false` - template tokens are not trimmed.\n            // `true` - treated as \"large\".\n            // `null` - treated as \"large\".\n            trim: null,\n\n            // stopTrim\n            // A moment token string, a delimited set of moment token strings,\n            // or an array of moment token strings. Trimming will stop when a token\n            // listed in this option is reached. A \"*\" character in the format\n            // template string will also mark a moment token as stopTrim.\n            // e.g. \"d [days] *h:mm:ss\" will always stop trimming at the 'hours' token.\n            stopTrim: null,\n\n            // largest\n            // Set to a positive integer to output only the \"n\" largest-magnitude\n            // moment tokens that have a value. All lesser-magnitude moment tokens\n            // will be ignored. This option takes effect even if `trim` is set\n            // to `false`.\n            largest: null,\n\n            // maxValue\n            // Use `maxValue` to render generalized output for large duration values,\n            // e.g. `\"> 60 days\"`. `maxValue` must be a positive integer and is\n            /// applied to the greatest-magnitude moment token in the format template.\n            maxValue: null,\n\n            // minValue\n            // Use `minValue` to render generalized output for small duration values,\n            // e.g. `\"< 5 minutes\"`. `minValue` must be a positive integer and is\n            // applied to the least-magnitude moment token in the format template.\n            minValue: null,\n\n            // precision\n            // If a positive integer, number of decimal fraction digits to render.\n            // If a negative integer, number of integer place digits to truncate to 0.\n            // If `useSignificantDigits` is set to `true` and `precision` is a positive\n            // integer, sets the maximum number of significant digits used in the\n            // formatted output.\n            precision: 0,\n\n            // trunc\n            // Default behavior rounds final token value. Set to `true` to\n            // truncate final token value, which was the default behavior in\n            // version 1 of this plugin.\n            trunc: false,\n\n            // forceLength\n            // Force first moment token with a value to render at full length\n            // even when template is trimmed and first moment token has length of 1.\n            forceLength: null,\n\n            // userLocale\n            // Formatted numerical output is rendered using `toLocaleString`\n            // and the locale of the user's environment. Set this option to render\n            // numerical output using a different locale. Unit names are rendered\n            // and detected using the locale set in moment.js, which can be different\n            // from the locale of user's environment.\n            userLocale: null,\n\n            // usePlural\n            // Will automatically singularize or pluralize unit names when they\n            // appear in the text associated with each moment token. Standard and\n            // short unit labels are singularized and pluralized, based on locale.\n            // e.g. in english, \"1 second\" or \"1 sec\" would be rendered instead\n            // of \"1 seconds\" or \"1 secs\". The default pluralization function\n            // renders a plural label for a value with decimal precision.\n            // e.g. \"1.0 seconds\" is never rendered as \"1.0 second\".\n            // Label types and pluralization function are configurable in the\n            // localeData extensions.\n            usePlural: true,\n\n            // useLeftUnits\n            // The text to the right of each moment token in a format string\n            // is treated as that token's units for the purposes of trimming,\n            // singularizing, and auto-localizing.\n            // e.g. \"h [hours], m [minutes], s [seconds]\".\n            // To properly singularize or localize a format string such as\n            // \"[hours] h, [minutes] m, [seconds] s\", where the units appear\n            // to the left of each moment token, set useLeftUnits to `true`.\n            // This plugin is not tested in the context of rtl text.\n            useLeftUnits: false,\n\n            // useGrouping\n            // Enables locale-based digit grouping in the formatted output. See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString\n            useGrouping: true,\n\n            // useSignificantDigits\n            // Treat the `precision` option as the maximum significant digits\n            // to be rendered. Precision must be a positive integer. Significant\n            // digits extend across unit types,\n            // e.g. \"6 hours 37.5 minutes\" represents 4 significant digits.\n            // Enabling this option causes token length to be ignored. See  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString\n            useSignificantDigits: false,\n\n            // template\n            // The template string used to format the duration. May be a function\n            // or a string. Template functions are executed with the `this` binding\n            // of the settings object so that template strings may be dynamically\n            // generated based on the duration object (accessible via `this.duration`)\n            // or any of the other settings. Leading and trailing space, comma,\n            // period, and colon characters are trimmed from the resulting string.\n            template: defaultFormatTemplate,\n\n            // useToLocaleString\n            // Set this option to `false` to ignore the `toLocaleString` feature\n            // test and force the use of the `formatNumber` fallback function\n            // included in this plugin.\n            useToLocaleString: true,\n\n            // formatNumber fallback options.\n            // When `toLocaleString` is detected and passes the feature test, the\n            // following options will have no effect: `toLocaleString` will be used\n            // for formatting and the grouping separator, decimal separator, and\n            // integer digit grouping will be determined by the user locale.\n\n            // groupingSeparator\n            // The integer digit grouping separator used when using the fallback\n            // formatNumber function.\n            groupingSeparator: \",\",\n\n            // decimalSeparator\n            // The decimal separator used when using the fallback formatNumber\n            // function.\n            decimalSeparator: \".\",\n\n            // grouping\n            // The integer digit grouping used when using the fallback formatNumber\n            // function. Must be an array. The default value of `[3]` gives the\n            // standard 3-digit thousand/million/billion digit groupings for the\n            // \"en\" locale. Setting this option to `[3, 2]` would generate the\n            // thousand/lakh/crore digit groupings used in the \"en-IN\" locale.\n            grouping: [3]\n        };\n\n        context.updateLocale('en', engLocale);\n    }\n\n    // Run feature tests for `Number#toLocaleString`.\n    toLocaleStringWorks = featureTestToLocaleString();\n    toLocaleStringRoundingWorks = toLocaleStringWorks && featureTestToLocaleStringRounding();\n\n    // Initialize duration format on the global moment instance.\n    init(moment);\n\n    // Return the init function so that duration format can be\n    // initialized on other moment instances.\n    return init;\n});\n","module.exports = __WEBPACK_EXTERNAL_MODULE__644__;","module.exports = __WEBPACK_EXTERNAL_MODULE__305__;","module.exports = __WEBPACK_EXTERNAL_MODULE__545__;","module.exports = __WEBPACK_EXTERNAL_MODULE__388__;","module.exports = __WEBPACK_EXTERNAL_MODULE__283__;","module.exports = __WEBPACK_EXTERNAL_MODULE__650__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export interface ClockOptions {\n  mode: ClockMode;\n  refresh: ClockRefresh;\n  clockType: ClockType;\n  timezone?: string;\n  bgColor?: string;\n  countdownSettings: CountdownSettings;\n  countupSettings: CountupSettings;\n  dateSettings: DateSettings;\n  timeSettings: TimeSettings;\n  timezoneSettings: TimezoneSettings;\n}\n\nexport enum ClockMode {\n  time = 'time',\n  countdown = 'countdown',\n  countup = 'countup',\n}\n\nexport enum ClockRefresh {\n  sec = 'sec',\n  dashboard = 'dashboard',\n}\n\nexport enum ClockType {\n  H24 = '24 hour',\n  H12 = '12 hour',\n  Custom = 'custom',\n}\n\nexport enum ZoneFormat {\n  name = 'name',\n  nameOffset = 'nameOffset',\n  offsetAbbv = 'offsetAbbv',\n  offset = 'offset',\n  abbv = 'abbv',\n}\n\nexport enum FontWeight {\n  normal = 'normal',\n  bold = 'bold',\n}\n\ninterface CountdownSettings {\n  endCountdownTime: any;\n  endText: string;\n  customFormat?: string;\n}\n\ninterface CountupSettings {\n  beginCountupTime: any;\n  beginText: string;\n  customFormat?: string;\n}\n\ninterface DateSettings {\n  showDate: boolean;\n  dateFormat: string;\n  locale: string;\n  fontSize: string;\n  fontWeight: FontWeight;\n}\n\ninterface TimeSettings {\n  customFormat?: string;\n  fontSize: string;\n  fontWeight: FontWeight;\n}\n\ninterface TimezoneSettings {\n  showTimezone: boolean;\n  zoneFormat: ZoneFormat;\n  fontSize: string;\n  fontWeight: FontWeight;\n}\n","import React, { PureComponent } from 'react';\nimport { PanelProps } from '@grafana/data';\nimport { withTheme2, Themeable2 } from '@grafana/ui';\nimport { ClockOptions, ClockType, ZoneFormat, ClockMode, ClockRefresh } from './types';\nimport { css } from '@emotion/css';\n\n// eslint-disable-next-line\nimport moment, { Moment } from 'moment-timezone';\nimport './external/moment-duration-format';\nimport { getTemplateSrv } from '@grafana/runtime';\n\ninterface Props extends Themeable2, PanelProps<ClockOptions> {}\ninterface State {\n  // eslint-disable-next-line\n  now: Moment;\n}\n\nexport function getTimeZoneNames(): string[] {\n  return (moment as any).tz.names();\n}\n\nclass UnthemedClockPanel extends PureComponent<Props, State> {\n  timerID?: any = 0;\n  state = { now: this.getTZ(), timezone: '' };\n\n  componentDidMount() {\n    this.initTimers();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { options, data } = this.props;\n    const { options: prevOptions, data: prevData } = prevProps;\n\n    if (options.refresh !== prevOptions.refresh) {\n      this.initTimers();\n    }\n\n    if (prevData !== data) {\n      this.onPanelRefresh();\n    }\n  }\n\n  initTimers = () => {\n    const { refresh } = this.props.options;\n\n    if (this.timerID) {\n      clearInterval(this.timerID);\n      this.timerID = 0;\n    }\n\n    if (refresh === ClockRefresh.dashboard) {\n      return this.tick();\n    }\n\n    const delay = 1000; // 1sec\n    this.timerID = setInterval(\n      () => this.tick(),\n      delay // 1 second or 1 min\n    );\n  };\n\n  onPanelRefresh = () => {\n    const { refresh } = this.props.options;\n    if (refresh === ClockRefresh.dashboard) {\n      this.tick();\n    }\n  };\n\n  componentWillUnmount() {\n    if (this.timerID) {\n      clearInterval(this.timerID);\n      this.timerID = 0;\n    }\n  }\n\n  tick() {\n    const { timezone } = this.props.options;\n    this.setState({ now: this.getTZ(timezone) });\n  }\n\n  getTimeFormat() {\n    const { clockType, timeSettings } = this.props.options;\n\n    if (clockType === ClockType.Custom && timeSettings.customFormat) {\n      return timeSettings.customFormat;\n    }\n\n    if (clockType === ClockType.H12) {\n      return 'h:mm:ss A';\n    }\n\n    return 'HH:mm:ss';\n  }\n\n  // Return a new moment instance in the selected timezone\n  // eslint-disable-next-line\n  getTZ(tz?: string): Moment {\n    if (!tz) {\n      tz = (moment as any).tz.guess();\n    } else {\n      tz = getTemplateSrv().replace(tz);\n    }\n    return (moment() as any).tz(tz);\n  }\n\n  getCountdownText(): string {\n    const { now } = this.state;\n    const { countdownSettings, timezone } = this.props.options;\n\n    if (!countdownSettings.endCountdownTime) {\n      return countdownSettings.endText;\n    }\n\n    const timeLeft = moment.duration(\n      moment(this.props.replaceVariables(countdownSettings.endCountdownTime))\n        .utcOffset(this.getTZ(timezone).format('Z'), true)\n        .diff(now)\n    );\n    let formattedTimeLeft = '';\n\n    if (timeLeft.asSeconds() <= 0) {\n      return countdownSettings.endText;\n    }\n\n    if (countdownSettings.customFormat === 'auto') {\n      return (timeLeft as any).format();\n    }\n\n    if (countdownSettings.customFormat) {\n      return (timeLeft as any).format(countdownSettings.customFormat);\n    }\n\n    let previous = '';\n\n    if (timeLeft.years() > 0) {\n      formattedTimeLeft = timeLeft.years() === 1 ? '1 year, ' : timeLeft.years() + ' years, ';\n      previous = 'years';\n    }\n    if (timeLeft.months() > 0 || previous === 'years') {\n      formattedTimeLeft += timeLeft.months() === 1 ? '1 month, ' : timeLeft.months() + ' months, ';\n      previous = 'months';\n    }\n    if (timeLeft.days() > 0 || previous === 'months') {\n      formattedTimeLeft += timeLeft.days() === 1 ? '1 day, ' : timeLeft.days() + ' days, ';\n      previous = 'days';\n    }\n    if (timeLeft.hours() > 0 || previous === 'days') {\n      formattedTimeLeft += timeLeft.hours() === 1 ? '1 hour, ' : timeLeft.hours() + ' hours, ';\n      previous = 'hours';\n    }\n\n    if (timeLeft.minutes() > 0 || previous === 'hours') {\n      formattedTimeLeft += timeLeft.minutes() === 1 ? '1 minute, ' : timeLeft.minutes() + ' minutes, ';\n    }\n\n    formattedTimeLeft += timeLeft.seconds() === 1 ? '1 second ' : timeLeft.seconds() + ' seconds';\n    return formattedTimeLeft;\n  }\n\n  getCountupText(): string {\n    const { now } = this.state;\n    const { countupSettings, timezone } = this.props.options;\n\n    if (!countupSettings.beginCountupTime) {\n      return countupSettings.beginText;\n    }\n\n    const timePassed = moment.duration(\n      moment(now).diff(\n        moment(this.props.replaceVariables(countupSettings.beginCountupTime)).utcOffset(\n          this.getTZ(timezone).format('Z'),\n          true\n        )\n      )\n    );\n\n    let formattedTimePassed = '';\n\n    if (timePassed.asSeconds() <= 0) {\n      return countupSettings.beginText;\n    }\n\n    if (countupSettings.customFormat === 'auto') {\n      return (timePassed as any).format();\n    }\n\n    if (countupSettings.customFormat) {\n      return (timePassed as any).format(countupSettings.customFormat);\n    }\n\n    let previous = '';\n\n    if (timePassed.years() > 0) {\n      formattedTimePassed = timePassed.years() === 1 ? '1 year, ' : timePassed.years() + ' years, ';\n      previous = 'years';\n    }\n    if (timePassed.months() > 0 || previous === 'years') {\n      formattedTimePassed += timePassed.months() === 1 ? '1 month, ' : timePassed.months() + ' months, ';\n      previous = 'months';\n    }\n    if (timePassed.days() > 0 || previous === 'months') {\n      formattedTimePassed += timePassed.days() === 1 ? '1 day, ' : timePassed.days() + ' days, ';\n      previous = 'days';\n    }\n    if (timePassed.hours() > 0 || previous === 'days') {\n      formattedTimePassed += timePassed.hours() === 1 ? '1 hour, ' : timePassed.hours() + ' hours, ';\n      previous = 'hours';\n    }\n\n    if (timePassed.minutes() > 0 || previous === 'hours') {\n      formattedTimePassed += timePassed.minutes() === 1 ? '1 minute, ' : timePassed.minutes() + ' minutes, ';\n    }\n\n    formattedTimePassed += timePassed.seconds() === 1 ? '1 second ' : timePassed.seconds() + ' seconds';\n    return formattedTimePassed;\n  }\n\n  renderZone() {\n    const { now } = this.state;\n    const { timezoneSettings } = this.props.options;\n    const { zoneFormat } = timezoneSettings;\n\n    const className = css`\n      font-size: ${timezoneSettings.fontSize};\n      font-weight: ${timezoneSettings.fontWeight};\n      line-height: 1.4;\n    `;\n\n    let zone = this.props.options.timezone || '';\n\n    switch (zoneFormat) {\n      case ZoneFormat.offsetAbbv:\n        zone = now.format('Z z');\n        break;\n      case ZoneFormat.offset:\n        zone = now.format('Z');\n        break;\n      case ZoneFormat.abbv:\n        zone = now.format('z');\n        break;\n      default:\n        try {\n          zone = (this.getTZ(zone) as any)._z.name;\n        } catch (e) {\n          console.log('Error getting timezone', e);\n        }\n    }\n\n    return (\n      <h4 className={className}>\n        {zone}\n        {zoneFormat === ZoneFormat.nameOffset && (\n          <>\n            <br />({now.format('Z z')})\n          </>\n        )}\n      </h4>\n    );\n  }\n\n  renderDate() {\n    const { now } = this.state;\n    const { dateSettings } = this.props.options;\n\n    const className = css`\n      font-size: ${dateSettings.fontSize};\n      font-weight: ${dateSettings.fontWeight};\n    `;\n\n    const display = now.locale(dateSettings.locale || '').format(dateSettings.dateFormat);\n    \n    return (\n      <span>\n        <h3 className={className}>{display}</h3>\n      </span>\n    );\n  }\n\n  renderTime() {\n    const { now } = this.state;\n    const { options } = this.props;\n    const { timeSettings, mode } = options;\n\n    const className = css`\n      font-size: ${timeSettings.fontSize};\n      font-weight: ${timeSettings.fontWeight};\n    `;\n\n    let display = now.format(this.getTimeFormat());\n    if (mode === ClockMode.countdown) {\n      display = this.getCountdownText();\n    } else if (mode === ClockMode.countup) {\n      display = this.getCountupText();\n    }\n\n    return <h2 className={className}>{display}</h2>;\n  }\n\n  render() {\n    const { options, width, height, theme } = this.props;\n    const { dateSettings, timezoneSettings, bgColor } = options;\n\n    const className = css`\n      display: flex;\n      align-items: center;\n      justify-content: center;      \n      flex-flow: column wrap;\n      text-align: center;\n      background-color: ${!bgColor ? theme.colors.background.primary : theme.v1.visualization.getColorByName(bgColor)};\n    `;\n\n    return (\n      <div\n        className={className}\n        style={{\n          width,\n          height,\n        }}\n      >\n        {dateSettings.showDate && this.renderDate()}\n        {this.renderTime()}\n        {timezoneSettings.showTimezone && this.renderZone()}\n      </div>\n    );\n  }\n}\n\nexport const ClockPanel = withTheme2(UnthemedClockPanel);\n","import React from 'react';\nimport { ColorPicker, Input, Icon, stylesFactory } from '@grafana/ui';\nimport { css } from '@emotion/css';\nimport { config } from '@grafana/runtime';\nimport { GrafanaTheme } from '@grafana/data';\n\nexport function ColorEditor(props: any) {\n  const styles = getStyles(config.theme);\n  let prefix: React.ReactNode = null;\n  let suffix: React.ReactNode = null;\n  if (props.value) {\n    suffix = <Icon className={styles.trashIcon} name=\"trash-alt\" onClick={() => props.onChange(undefined)} />;\n  }\n\n  prefix = (\n    <div className={styles.inputPrefix}>\n      <div className={styles.colorPicker}>\n        <ColorPicker\n          color={props.value || config.theme.colors.panelBg}\n          onChange={props.onChange}\n          enableNamedColors={true}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <Input        \n        type=\"text\"\n        value={props.value || 'Pick Color'}\n        onBlur={(v: any) => {\n          console.log('CLICK');\n        }}\n        prefix={prefix}\n        suffix={suffix}\n      />\n    </div>\n  );\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => {\n  return {\n    colorPicker: css`\n      padding: 0 ${theme.spacing.sm};\n    `,\n    inputPrefix: css`\n      display: flex;\n      align-items: center;\n    `,\n    trashIcon: css`\n      color: ${theme.colors.textWeak};\n      cursor: pointer;\n      &:hover {\n        color: ${theme.colors.text};\n      }\n    `,\n  };\n});\n","import { PanelOptionsEditorBuilder, dateTime, SelectableValue } from '@grafana/data';\n\nimport { ClockOptions, ClockMode, ClockType, FontWeight, ZoneFormat, ClockRefresh } from './types';\nimport { getTimeZoneNames } from './ClockPanel';\nimport { ColorEditor } from './ColorEditor';\nimport { getTemplateSrv } from '@grafana/runtime';\n\nexport const optionsBuilder = (builder: PanelOptionsEditorBuilder<ClockOptions>) => {\n  // Global options\n  builder\n    .addRadio({\n      path: 'mode',\n      name: 'Mode',\n      settings: {\n        options: [\n          { value: ClockMode.time, label: 'Time' },\n          { value: ClockMode.countdown, label: 'Countdown' },\n          { value: ClockMode.countup, label: 'Countup' },\n        ],\n      },\n      defaultValue: ClockMode.time,\n    })\n    .addRadio({\n      path: 'refresh',\n      name: 'Refresh',\n      settings: {\n        options: [\n          { value: ClockRefresh.sec, label: 'Every second' },\n          { value: ClockRefresh.dashboard, label: 'With the dashboard' },\n        ],\n      },\n      defaultValue: ClockRefresh.sec,\n    })\n    .addCustomEditor({\n      id: 'bgColor',\n      path: 'bgColor',\n      name: 'Background Color',\n      editor: ColorEditor,\n      defaultValue: '',\n    });\n\n  addCountdown(builder);\n  addCountup(builder);\n  addTimeFormat(builder);\n  addTimeZone(builder);\n  addDateFormat(builder);\n};\n\n//---------------------------------------------------------------------\n// COUNTDOWN\n//---------------------------------------------------------------------\nfunction addCountdown(builder: PanelOptionsEditorBuilder<ClockOptions>) {\n  const category = ['Countdown'];\n\n  builder\n    .addTextInput({\n      category,\n      path: 'countdownSettings.endCountdownTime',\n      name: 'End Time',\n      settings: {\n        placeholder: 'ISO 8601 or RFC 2822 Date time',\n      },\n      defaultValue: dateTime(Date.now()).add(6, 'h').format(),\n      showIf: (o) => o.mode === ClockMode.countdown,\n    })\n    .addTextInput({\n      category,\n      path: 'countdownSettings.endText',\n      name: 'End Text',\n      defaultValue: '00:00:00',\n      showIf: (o) => o.mode === ClockMode.countdown,\n    })\n\n    .addTextInput({\n      category,\n      path: 'countdownSettings.customFormat',\n      name: 'Custom format',\n      settings: {\n        placeholder: 'optional',\n      },\n      defaultValue: undefined,\n      showIf: (o) => o.mode === ClockMode.countdown,\n    });\n}\n\n//---------------------------------------------------------------------\n// COUNTUP\n//---------------------------------------------------------------------\nfunction addCountup(builder: PanelOptionsEditorBuilder<ClockOptions>) {\n  const category = ['Countup'];\n\n  builder\n    .addTextInput({\n      category,\n      path: 'countupSettings.beginCountupTime',\n      name: 'Begin Time',\n      settings: {\n        placeholder: 'ISO 8601 or RFC 2822 Date time',\n      },\n      defaultValue: dateTime(Date.now()).add(6, 'h').format(),\n      showIf: (o) => o.mode === ClockMode.countup,\n    })\n    .addTextInput({\n      category,\n      path: 'countupSettings.beginText',\n      name: 'Begin Text',\n      defaultValue: '00:00:00',\n      showIf: (o) => o.mode === ClockMode.countup,\n    })\n\n    .addTextInput({\n      category,\n      path: 'countupSettings.customFormat',\n      name: 'Custom format',\n      settings: {\n        placeholder: 'optional',\n      },\n      defaultValue: undefined,\n      showIf: (o) => o.mode === ClockMode.countup,\n    });\n}\n\n//---------------------------------------------------------------------\n// TIME FORMAT\n//---------------------------------------------------------------------\nfunction addTimeFormat(builder: PanelOptionsEditorBuilder<ClockOptions>) {\n  const category = ['Time Format'];\n\n  builder\n    .addRadio({\n      category,\n      path: 'clockType',\n      name: 'Clock Type',\n      settings: {\n        options: [\n          { value: ClockType.H24, label: '24 Hour' },\n          { value: ClockType.H12, label: '12 Hour' },\n          { value: ClockType.Custom, label: 'Custom' },\n        ],\n      },\n      defaultValue: ClockType.H24,\n    })\n    .addTextInput({\n      category,\n      path: 'timeSettings.customFormat',\n      name: 'Time Format',\n      description: 'the date formatting pattern',\n      settings: {\n        placeholder: 'date format',\n      },\n      defaultValue: undefined,\n      showIf: (opts) => opts.clockType === ClockType.Custom,\n    })\n    .addTextInput({\n      category,\n      path: 'timeSettings.fontSize',\n      name: 'Font size',\n      settings: {\n        placeholder: 'Font size (e.g. 12px)',\n      },\n      defaultValue: '12px',\n    })\n    .addRadio({\n      category,\n      path: 'timeSettings.fontWeight',\n      name: 'Font weight',\n      settings: {\n        options: [\n          { value: FontWeight.normal, label: 'Normal' },\n          { value: FontWeight.bold, label: 'Bold' },\n        ],\n      },\n      defaultValue: FontWeight.normal,\n    });\n}\n\nfunction getVariableOptions() {\n  return getTemplateSrv()\n    .getVariables()\n    .map((t) => {\n      const value = '${' + t.name + '}';\n      const info: SelectableValue<string> = {\n        label: value,\n        value,\n        icon: 'arrow-right',\n      };\n      return info;\n    });\n}\n\n//---------------------------------------------------------------------\n// TIMEZONE\n//---------------------------------------------------------------------\nfunction addTimeZone(builder: PanelOptionsEditorBuilder<ClockOptions>) {\n  const category = ['Timezone'];\n\n  const timezones = getTimeZoneNames().map((n) => {\n    return { label: n, value: n };\n  });\n  timezones.unshift({ label: 'Default', value: '' });\n\n  builder\n    .addSelect({\n      category,\n      path: 'timezone',\n      name: 'Timezone',\n      settings: {\n        options: timezones,\n        getOptions: async () => {\n          const opts = getVariableOptions();\n          if (opts.length) {\n            return [...opts, ...timezones];\n          }\n          return timezones;\n        },\n      },\n      defaultValue: '',\n    })\n    .addBooleanSwitch({\n      category,\n      path: 'timezoneSettings.showTimezone',\n      name: 'Show Timezone',\n      defaultValue: false,\n    })\n    .addSelect({\n      category,\n      path: 'timezoneSettings.zoneFormat',\n      name: 'Display Format',\n      settings: {\n        options: [\n          { value: ZoneFormat.name, label: 'Normal' },\n          { value: ZoneFormat.nameOffset, label: 'Name + Offset' },\n          { value: ZoneFormat.offsetAbbv, label: 'Offset + Abbreviation' },\n          { value: ZoneFormat.offset, label: 'Offset' },\n          { value: ZoneFormat.abbv, label: 'Abbreviation' },\n        ],\n      },\n      defaultValue: ZoneFormat.offsetAbbv,\n      showIf: (s) => s.timezoneSettings?.showTimezone,\n    })\n    .addTextInput({\n      category,\n      path: 'timezoneSettings.fontSize',\n      name: 'Font size',\n      settings: {\n        placeholder: 'font size',\n      },\n      defaultValue: '12px',\n      showIf: (s) => s.timezoneSettings?.showTimezone,\n    })\n    .addRadio({\n      category,\n      path: 'timezoneSettings.fontWeight',\n      name: 'Font weight',\n      settings: {\n        options: [\n          { value: FontWeight.normal, label: 'Normal' },\n          { value: FontWeight.bold, label: 'Bold' },\n        ],\n      },\n      defaultValue: FontWeight.normal,\n      showIf: (s) => s.timezoneSettings?.showTimezone,\n    });\n}\n\n//---------------------------------------------------------------------\n// DATE FORMAT\n//---------------------------------------------------------------------\nfunction addDateFormat(builder: PanelOptionsEditorBuilder<ClockOptions>) {\n  const category = ['Date Options'];\n\n  builder\n    .addBooleanSwitch({\n      category,\n      path: 'dateSettings.showDate',\n      name: 'Show Date',\n      defaultValue: false,\n    })\n    .addTextInput({\n      category,\n      path: 'dateSettings.dateFormat',\n      name: 'Date Format',\n      settings: {\n        placeholder: 'Enter date format',\n      },\n      defaultValue: 'YYYY-MM-DD',\n      showIf: (s) => s.dateSettings?.showDate,\n    })\n    .addTextInput({\n      category,\n      path: 'dateSettings.locale',\n      name: 'Locale',\n      settings: {\n        placeholder: 'Enter locale: de, fr, es, ... (default: en)',\n      },\n      defaultValue: '',\n      showIf: (s) => s.dateSettings?.showDate,\n    })\n    .addTextInput({\n      category,\n      path: 'dateSettings.fontSize',\n      name: 'Font size',\n      settings: {\n        placeholder: 'date format',\n      },\n      defaultValue: '20px',\n      showIf: (s) => s.dateSettings?.showDate,\n    })\n    .addRadio({\n      category,\n      path: 'dateSettings.fontWeight',\n      name: 'Font weight',\n      settings: {\n        options: [\n          { value: FontWeight.normal, label: 'Normal' },\n          { value: FontWeight.bold, label: 'Bold' },\n        ],\n      },\n      defaultValue: FontWeight.normal,\n      showIf: (s) => s.dateSettings?.showDate,\n    });\n}\n","import { PanelModel } from '@grafana/data';\nimport { ClockOptions, ClockRefresh } from './types';\n\nexport const clockMigrationHandler = (panel: PanelModel<ClockOptions>): Partial<ClockOptions> => {\n  const options: any = panel.options || {};\n  if (options.refreshSettings?.syncWithDashboard) {\n    options.refresh = ClockRefresh.dashboard;\n  } else if ((panel as any).refreshSettings?.syncWithDashboard) {\n    options.refresh = ClockRefresh.dashboard;\n  }\n\n  return options;\n};\n","import { PanelPlugin } from '@grafana/data';\n\nimport { ClockPanel } from './ClockPanel';\nimport { ClockOptions } from './types';\nimport { optionsBuilder } from './options';\nimport { clockMigrationHandler } from './migrations';\n\nexport const plugin = new PanelPlugin<ClockOptions>(ClockPanel)\n  .setNoPadding()\n  .setMigrationHandler(clockMigrationHandler)\n  .setPanelOptions(optionsBuilder);\n"],"names":["module","exports","tz","load","root","factory","this","moment","undefined","version","default","cachedGuess","zones","links","countries","names","guesses","logError","momentVersion","split","major","minor","charCodeToInt","charCode","unpackBase60","string","i","parts","whole","fractional","multiplier","out","sign","charCodeAt","length","arrayToInt","array","mapIndices","source","indices","unpack","data","offsets","untils","Math","round","Infinity","intToUntil","name","abbrs","population","Zone","packedString","_set","Country","country_name","zone_names","OffsetAt","at","timeString","toTimeString","abbr","match","join","offset","getTimezoneOffset","ZoneScore","zone","offsetScore","abbrScore","findChange","low","high","mid","diff","Date","sortZoneScores","a","b","localeCompare","addToGuesses","guessesForUserOffsets","j","guessesOffset","offsetsLength","filteredGuesses","hasOwnProperty","push","normalizeName","toLowerCase","replace","addZone","packed","normalized","getZone","caller","link","addLink","aliases","alias","normal0","normal1","needsOffset","m","isUnixTimestamp","_f","_a","_tzm","message","console","error","input","args","Array","prototype","slice","call","arguments","utc","apply","isMoment","add","parse","unpacked","_index","timestamp","target","zone_name","Object","keys","filter","country_code","indexOf","offsetNext","offsetPrev","max","moveAmbiguousForward","moveInvalidForward","mom","utcOffset","scoreOffsetAt","offsetAt","abs","dataVersion","_zones","_links","_names","_countries","country_zones","toUpperCase","addCountries","zoneExists","didShowError","guess","ignoreCache","intlName","Intl","DateTimeFormat","resolvedOptions","timeZone","e","zoneScore","change","next","startYear","getFullYear","last","userOffsets","zoneScores","sort","rebuildGuess","zonesForCountry","country","with_offset","map","old","fn","abbrWrap","_z","resetZoneWrap","defaultZone","updateOffset","keepTime","_isUTC","_d","z","Error","zoneName","zoneAbbr","local","setDefault","momentProperties","toString","toLocaleStringWorks","toLocaleStringRoundingWorks","types","bubbles","type","targets","value","stringIncludes","str","search","repeatZero","qty","result","formatNumber","number","options","userLocale","integerString","fractionString","exponentString","useToLocaleString","useGrouping","grouping","maximumSignificantDigits","minimumIntegerDigits","fractionDigits","groupingSeparator","decimalSeparator","localeStringOptions","maximumFractionDigits","minimumFractionDigits","roundingOptions","extend","parseFloat","toLocaleString","temp","toPrecision","toFixed","integerLength","fractionLength","digitCount","digits","digitsArray","reverse","carry","parseInt","stringRound","exponent","group","formattedString","shift","durationLabelCompare","label","durationGetLabels","token","localeData","labels","each","localeDataKey","labelType","labelKey","key","passed","engLocale","durationLabelsStandard","S","SS","s","ss","mm","h","hh","d","dd","w","ww","M","MM","y","yy","durationLabelsShort","durationTimeTemplates","HMS","HM","MS","durationLabelTypes","durationPluralKey","integerValue","decimalValue","isArray","isObject","obj","find","callback","index","item","ret","pluck","prop","compact","unique","intersection","_b","rest","initial","any","flatten","child","concat","durationsFormat","durations","settings","arg","precision","template","returnMomentTypes","formattedDurations","dur","format","outputTypes","largest","durationFormat","defaults","asMilliseconds","asMonths","isValid","isNegative","remainder","duration","remainderMonths","momentTokens","years","months","weeks","days","hours","minutes","seconds","milliseconds","tokenDefs","escape","general","typeMap","test","tokenizer","RegExp","stopTrim","_durationTimeTemplates","locale","useLeftUnits","usePlural","forceLength","trunc","useSignificantDigits","significantDigits","significantDigitsCache","minValue","isMinValue","maxValue","isMaxValue","trim","trimIncludes","rLarge","rSmall","rBoth","rMid","rAll","rFinal","trimLarge","trimSmall","trimMid","trimFinal","rawTokens","text","currentToken","tokens","momentTypes","momentType","rawValue","isSmallest","isLargest","as","wholeValue","floor","subtract","tokenLength","truncMethod","truncate","places","factor","pow","foundFirst","bubbled","formatValue","formatOptions","formattedValue","formattedValueEn","formattedValueMS","findType","bubbleTypes","bubble","bubbleMomentType","targetMomentType","outputType","values","pluralKey","autoLocalized","pluralizedLabels","_durationLabelTypes","defaultFormatTemplate","_data","firstType","lastType","findLast","init","context","updateLocale","toLocaleStringSupportsLocales","define","momentDurationFormatSetup","__WEBPACK_EXTERNAL_MODULE__644__","__WEBPACK_EXTERNAL_MODULE__305__","__WEBPACK_EXTERNAL_MODULE__545__","__WEBPACK_EXTERNAL_MODULE__388__","__WEBPACK_EXTERNAL_MODULE__283__","__WEBPACK_EXTERNAL_MODULE__650__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","definition","o","defineProperty","enumerable","get","r","Symbol","toStringTag","ClockMode","time","countdown","countup","ClockRefresh","sec","dashboard","ClockType","H24","H12","Custom","ZoneFormat","nameOffset","offsetAbbv","abbv","FontWeight","normal","bold","UnthemedClockPanel","PureComponent","componentDidMount","initTimers","componentDidUpdate","prevProps","props","prevOptions","prevData","refresh","onPanelRefresh","componentWillUnmount","timerID","clearInterval","tick","timezone","setState","now","getTZ","getTimeFormat","clockType","timeSettings","customFormat","getTemplateSrv","getCountdownText","state","countdownSettings","endCountdownTime","endText","timeLeft","replaceVariables","formattedTimeLeft","asSeconds","previous","getCountupText","countupSettings","beginCountupTime","beginText","timePassed","formattedTimePassed","renderZone","timezoneSettings","zoneFormat","className","css","fontSize","fontWeight","log","h4","br","renderDate","dateSettings","display","dateFormat","span","h3","renderTime","mode","h2","render","width","height","theme","bgColor","v1","visualization","getColorByName","colors","background","primary","div","style","showDate","showTimezone","setInterval","ClockPanel","withTheme2","ColorEditor","styles","getStyles","config","prefix","suffix","Icon","trashIcon","onClick","onChange","inputPrefix","colorPicker","ColorPicker","color","enableNamedColors","Input","onBlur","v","stylesFactory","spacing","sm","textWeak","plugin","PanelPlugin","setNoPadding","setMigrationHandler","panel","refreshSettings","syncWithDashboard","setPanelOptions","builder","addRadio","path","defaultValue","addCustomEditor","id","editor","category","addTextInput","placeholder","dateTime","showIf","addCountdown","addCountup","description","opts","addTimeFormat","timezones","unshift","addSelect","getOptions","getVariables","t","icon","addBooleanSwitch","addTimeZone","addDateFormat"],"sourceRoot":""}