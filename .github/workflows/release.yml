name: Create release and publish to github, npm and docker hub

on: # zizmor: ignore[cache-poisoning]
  push:
    tags:
      - "*"

jobs:
  release-to-github:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false

      - run: git fetch --force --tags
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod
          check-latest: true

      - id: get-secrets
        uses: grafana/shared-workflows/actions/get-vault-secrets@a37de51f3d713a30a9e4b21bcdfbd38170020593 # v1.3.0
        with:
          repo_secrets: |
            GITHUB_APP_ID=plugins-platform-bot-app:app_id
            GITHUB_APP_PRIVATE_KEY=plugins-platform-bot-app:app_pem
          export_env: false

      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        with:
          app-id: ${{ fromJSON(steps.get-secrets.outputs.secrets).GITHUB_APP_ID }}
          private-key: ${{ fromJSON(steps.get-secrets.outputs.secrets).GITHUB_APP_PRIVATE_KEY }}
          permission-contents: write

      - uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}

  release-to-npm:
    runs-on: ubuntu-latest
    needs: release-to-github
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: "24"
          registry-url: "https://registry.npmjs.org"
      - run: npm install
      - run: npm publish

  release-to-dockerhub:
    runs-on: ubuntu-latest
    # this job doesn't really need the github release, but it is a fast
    # way to prevent it from running if the release is bad
    needs: release-to-github
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Get version from package.json
        id: get_version
        run: |
          echo "version=$(jq -r .version package.json)" >> "$GITHUB_OUTPUT"

      - id: push-to-dockerhub
        uses: grafana/shared-workflows/actions/build-push-to-dockerhub@73203ba0d91f56416220d0f647b520e6190223d5
        with:
          repository: grafana/plugin-validator-cli
          context: .
          tags: |-
            "v${{ steps.get_version.outputs.version }}"
            "latest"
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
